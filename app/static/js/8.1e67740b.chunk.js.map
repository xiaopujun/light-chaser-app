{"version":3,"sources":["lib/lc-code-editer/CodeEditor.tsx","lib/lc-config-item/ConfigItemTB.tsx","comps/common-component/data-config/DataConfig.tsx"],"names":["CodeEditor","props","editorDom","editor","valueControl","value","onChange","getValue","formatCodeShortKey","code","formatted","js_beautify","indent_size","space_in_empty_paren","setValue","formatCode","defaultValue","undefined","this","readonly","width","height","mode","CodeMirror","theme","lineNumbers","matchBrackets","smartIndent","readOnly","extraKeys","on","setSize","off","className","style","border","ref","dom","Component","ConfigItemTB","title","contentStyle","children","DataConfig","state","dataSource","dataSourcesChange","instance","update","data","reRender","setState","dataConfig","getConfig","ConfigItem","Select","options","label","ApiDataConfig","apiData","urlRef","useRef","url","methodRef","method","headerRef","JSON","stringify","header","paramsRef","params","flashFrequencyRef","flashFrequency","useState","testResult","setTestResult","UnderLineInput","current","e","target","color","display","alignItems","type","parseInt","LcButton","margin","onClick","stringToJsObj","sendHttpRequest","then","res","catch","err","message","error","warning","StaticDataConfig","config","dataCode","staticData","dataStr","replace","parse","operateType","OperateType","DATA"],"mappings":"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","file":"static/js/8.1e67740b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport './lc-dark.css';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\nimport 'codemirror/addon/edit/matchbrackets.js';\r\nimport 'codemirror/addon/comment/comment.js';\r\nimport js_beautify from 'js-beautify';\r\n\r\ninterface CodeEditorProps {\r\n    value?: string;\r\n    defaultValue?: string;\r\n    onChange?: (value: string) => void;\r\n    readonly?: boolean;\r\n    width?: string;\r\n    height?: string;\r\n    mode?: 'javascript' | 'html' | 'css' | 'sql';\r\n}\r\n\r\nclass CodeEditor extends Component<CodeEditorProps> {\r\n    editorDom: any = null;\r\n    editor: any = null;\r\n    valueControl: boolean = true;\r\n    value: string = '';\r\n\r\n    constructor(props: CodeEditorProps) {\r\n        super(props);\r\n        const {value, defaultValue} = props;\r\n        this.valueControl = value !== undefined;\r\n        this.value = value || defaultValue || '';\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.editorDom == null)\r\n            return;\r\n        const {readonly, width, height, mode} = this.props;\r\n        this.editor = CodeMirror(this.editorDom, {\r\n            mode: mode || 'javascript',\r\n            theme: 'lc-dark',\r\n            lineNumbers: true,\r\n            matchBrackets: true,\r\n            smartIndent: true,\r\n            readOnly: readonly || false,\r\n            extraKeys: {\r\n                'Ctrl-/': 'toggleComment',\r\n                'Ctrl-Alt-L': this.formatCodeShortKey,\r\n            },\r\n        });\r\n        this.editor.setValue((this.value && js_beautify(this.value, {\r\n            indent_size: 2,\r\n            space_in_empty_paren: true,\r\n        })) || '');\r\n        this.editor.on('change', this.onChange);\r\n        this.editor.setSize(width || '100%', height || '100%');\r\n    }\r\n\r\n    onChange = () => {\r\n        const {onChange} = this.props;\r\n        onChange && onChange(this.editor.getValue());\r\n    }\r\n\r\n    formatCodeShortKey = () => {\r\n        if (!this.editor) return;\r\n        const code = this.editor.getValue();\r\n        const formatted = js_beautify(code, {\r\n            indent_size: 2,\r\n            space_in_empty_paren: true,\r\n        });\r\n        this.editor.setValue(formatted);\r\n    };\r\n\r\n    formatCode = (code: string) => {\r\n        return js_beautify(code, {\r\n            indent_size: 2,\r\n            space_in_empty_paren: true,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.valueControl && this.editor) {\r\n            this.editor.off('change', this.onChange);\r\n            this.editor.setValue(this.formatCode(this.props.value || ''), 0);\r\n            this.editor.on('change', this.onChange);\r\n        }\r\n        return (\r\n            <div className={'lc-code-editor'} style={{border: '1px solid #373738'}} ref={dom => this.editorDom = dom}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeEditor;","import React, {Component, CSSProperties} from 'react';\r\nimport './ConfigItemTB.less';\r\n\r\ninterface ConfigItemTBProps {\r\n    title: string;\r\n    contentStyle?: CSSProperties;\r\n}\r\n\r\nclass ConfigItemTB extends Component<ConfigItemTBProps> {\r\n    render() {\r\n        const {title = '', contentStyle = {width: 90}} = this.props;\r\n        return (\r\n            <div className={'lc-config-item-tb'}>\r\n                <div className={'item-tb-title'}>{title}</div>\r\n                <div className={'item-tb-content'} style={{...contentStyle}}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfigItemTB;","import React, {Component, useRef, useState} from 'react';\r\nimport ConfigItem from \"../../../lib/lc-config-item/ConfigItem\";\r\nimport CodeEditor from \"../../../lib/lc-code-editer/CodeEditor\";\r\nimport LcButton from \"../../../lib/lc-button/LcButton\";\r\nimport Select from \"../../../lib/lc-select/Select\";\r\nimport './DataConfig.less';\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport {DataConfigType} from \"../../../designer/DesignerType\";\r\nimport {OperateType} from \"../../../framework/core/AbstractComponent\";\r\nimport {stringToJsObj} from \"../../../utils/ObjectUtil\";\r\nimport {sendHttpRequest} from \"../../../utils/HttpUtil\";\r\nimport UnderLineInput from \"../../../lib/lc-input/UnderLineInput\";\r\nimport ConfigItemTB from \"../../../lib/lc-config-item/ConfigItemTB\";\r\nimport {message} from \"antd\";\r\n\r\nclass DataConfig extends Component<ConfigType> {\r\n\r\n    state = {\r\n        dataSource: 'static',\r\n    }\r\n\r\n    constructor(props: ConfigType) {\r\n        super(props);\r\n        const {instance} = props;\r\n        const dataConfig: DataConfigType = instance.getConfig().data;\r\n        this.state = {\r\n            dataSource: dataConfig?.dataSource || 'static',\r\n        }\r\n    }\r\n\r\n    dataSourcesChange = (value: any) => {\r\n        const {instance} = this.props;\r\n        instance.update({data: {dataSource: value}}, {reRender: false});\r\n        this.setState({\r\n            dataSource: value,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {instance} = this.props;\r\n        const {dataSource} = this.state;\r\n        return (\r\n            <div className={'lc-data-config'}>\r\n                <ConfigItem title={'数据源'} contentStyle={{width: 100}}>\r\n                    <Select onChange={(value) => this.dataSourcesChange(value)} defaultValue={dataSource} options={[\r\n                        {value: 'static', label: '静态数据'},\r\n                        {value: 'api', label: '接口(API)'},\r\n                        // {value: 'database', label: '数据库'},\r\n                        // {value: 'excel', label: 'EXCEL导入'},\r\n                    ]}/>\r\n                </ConfigItem>\r\n                {dataSource === 'static' &&\r\n                <StaticDataConfig instance={instance}/>}\r\n                {dataSource === 'api' &&\r\n                <ApiDataConfig instance={instance}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst ApiDataConfig: React.FC<ConfigType> = ({instance}) => {\r\n    const config: DataConfigType = instance.getConfig().data;\r\n    const {apiData} = config;\r\n    const urlRef = useRef(apiData?.url || '');\r\n    const methodRef = useRef(apiData?.method || '');\r\n    const headerRef = useRef(JSON.stringify(apiData?.header || {}));\r\n    const paramsRef = useRef(JSON.stringify(apiData?.params || {}));\r\n    const flashFrequencyRef = useRef(apiData?.flashFrequency || 5);\r\n    const [testResult, setTestResult] = useState<any>('');\r\n\r\n    const testApi = () => {\r\n        if (urlRef.current === '') {\r\n            message.error('接口地址不能为空');\r\n            return;\r\n        }\r\n        if (methodRef.current === '') {\r\n            message.error('请求方式不能为空');\r\n            return;\r\n        }\r\n        let header = stringToJsObj(headerRef.current);\r\n        if (!header) {\r\n            message.error('请求头不符合json格式');\r\n            return;\r\n        }\r\n        let params = stringToJsObj(paramsRef.current);\r\n        if (!params) {\r\n            message.error('请求参数不符合json格式');\r\n            return;\r\n        }\r\n        sendHttpRequest(urlRef.current, methodRef.current, header, params).then(res => {\r\n            setTestResult(JSON.stringify(res));\r\n        }).catch(err => {\r\n            setTestResult(JSON.stringify(err));\r\n        });\r\n    }\r\n\r\n    const doSave = () => {\r\n        if (urlRef.current === '') {\r\n            message.warning('接口地址不能为空');\r\n            return;\r\n        }\r\n        if (methodRef.current === '') {\r\n            message.warning('请求方式不能为空');\r\n            return;\r\n        }\r\n\r\n        let header = stringToJsObj(headerRef.current);\r\n        if (!header) message.error('请求头不符合json格式');\r\n        let params = stringToJsObj(paramsRef.current);\r\n        if (!params) message.error('请求参数不符合json格式');\r\n        instance.update({\r\n            data: {\r\n                apiData: {\r\n                    url: urlRef.current,\r\n                    method: methodRef.current,\r\n                    header: header,\r\n                    params: params,\r\n                    flashFrequency: flashFrequencyRef.current\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const headerOnChange = (value: string) => {\r\n        headerRef.current = value;\r\n    }\r\n\r\n    const paramsOnChange = (value: string) => {\r\n        paramsRef.current = value;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ConfigItem title={'接口地址'} contentStyle={{width: 240}}>\r\n                <UnderLineInput defaultValue={urlRef.current} onChange={e => urlRef.current = e.target.value}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'请求方式'} contentStyle={{width: 100}}>\r\n                <Select options={[\r\n                    {value: 'get', label: 'GET'},\r\n                    {value: 'post', label: 'POST'},\r\n                    {value: 'put', label: 'PUT'},\r\n                    {value: 'delete', label: 'DELETE'},\r\n                ]} defaultValue={methodRef.current} onChange={value => methodRef.current = value}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'刷新频率'} contentStyle={{\r\n                color: '#c6c9cd',\r\n                display: 'flex',\r\n                width: 40,\r\n                alignItems: 'center'\r\n            }}>\r\n                <UnderLineInput type={'number'} defaultValue={flashFrequencyRef.current}\r\n                                onChange={e => flashFrequencyRef.current = parseInt(e.target.value)}/>\r\n                <div>秒</div>\r\n            </ConfigItem>\r\n            <ConfigItemTB title={'请求头(JSON)'} contentStyle={{width: '95%'}}>\r\n                <CodeEditor onChange={headerOnChange} defaultValue={headerRef.current}/>\r\n            </ConfigItemTB>\r\n            <ConfigItemTB title={'请求参数(JSON)'} contentStyle={{width: '95%'}}>\r\n                <CodeEditor onChange={paramsOnChange} defaultValue={paramsRef.current}/>\r\n            </ConfigItemTB>\r\n            <ConfigItemTB title={'响应结果'} contentStyle={{width: '95%'}}>\r\n                <CodeEditor readonly={true} value={testResult}/>\r\n            </ConfigItemTB>\r\n            <LcButton style={{width: 'calc(50% - 16px)', margin: '0 7px'}} onClick={testApi}>测试接口</LcButton>\r\n            <LcButton style={{width: 'calc(50% - 16px)', margin: '0 7px'}} onClick={doSave}>保存</LcButton>\r\n        </>\r\n    );\r\n}\r\n\r\nconst StaticDataConfig: React.FC<ConfigType> = ({instance}) => {\r\n\r\n    const config: DataConfigType = instance.getConfig().data;\r\n    let dataCode = JSON.stringify(config.staticData?.data);\r\n\r\n    const flashData = () => {\r\n        try {\r\n            const dataStr = dataCode.replace(/'/g, '\"').replace(/\\s/g, '');\r\n            const data = JSON.parse(dataStr);\r\n            instance.update({data: {staticData: {data}}, style: {data}},\r\n                {reRender: true, operateType: OperateType.DATA});\r\n        } catch (e: any) {\r\n            message.error('数据格式错误');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CodeEditor onChange={(value) => dataCode = value} height={'400'} defaultValue={dataCode || ''}/>\r\n            <div className={'static-data-btn-arr'}><LcButton onClick={flashData}>保存并刷新数据</LcButton></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DataConfig;"],"sourceRoot":""}