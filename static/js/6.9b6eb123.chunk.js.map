{"version":3,"sources":["comps/antd-common/bar/AntdBarCommonConfig.tsx"],"names":["AntdBarCommonStyleConfig","legendChange","legend","props","instance","update","style","barGraphicsChange","config","barCoordinateSysChange","this","getConfig","AntdBarGraphics","onChange","Component","title","itemStyle","width","contentStyle","data","mode","value","barStyle","fill","color","undefined","startsWith","split","buildColorModeData","type","min","e","maxBarWidth","parseInt","target","defaultValue","AntdBarFieldMapping","xField","yField","seriesField","options","length","dataObj","Object","keys","forEach","key","push","label","fieldChange"],"mappings":"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","file":"static/js/6.9b6eb123.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport {AntdCartesianCoordinateSys, AntdLegend} from \"../config/AntdFragment\";\r\nimport {BarOptions} from \"@antv/g2plot\";\r\nimport {Legend} from \"@antv/g2plot/lib/types/legend\";\r\nimport AntdCommonBar from \"./AntdCommonBar\";\r\nimport {WritableBarOptions} from \"../types\";\r\nimport ColorMode, {ColorModeValue} from \"../../../lib/lc-color-mode/ColorMode\";\r\nimport {ShapeAttrs} from \"@antv/g-base\";\r\nimport Accordion from \"../../../lib/lc-accordion/Accordion\";\r\nimport ConfigItem from \"../../../lib/lc-config-item/ConfigItem\";\r\nimport UnderLineInput from \"../../../lib/lc-input/UnderLineInput\";\r\nimport {Option} from \"../../../lib/lc-select/SelectType\";\r\nimport ConfigCard from \"../../../lib/lc-config-card/ConfigCard\";\r\nimport Select from \"../../../lib/lc-select/Select\";\r\n\r\nclass AntdBarCommonStyleConfig extends Component<ConfigType> {\r\n\r\n    legendChange = (legend: Legend) => {\r\n        const instance = this.props.instance as AntdCommonBar;\r\n        instance.update({style: {legend}});\r\n    }\r\n\r\n    barGraphicsChange = (config: BarOptions) => {\r\n        const instance = this.props.instance as AntdCommonBar;\r\n        instance.update({style: config});\r\n    }\r\n\r\n    barCoordinateSysChange = (config: BarOptions) => {\r\n        const instance = this.props.instance as AntdCommonBar;\r\n        instance.update({style: config});\r\n    }\r\n\r\n    render() {\r\n        const {instance} = this.props;\r\n        const config: BarOptions = instance.getConfig().style;\r\n        return (\r\n            <>\r\n                <AntdBarGraphics onChange={this.barGraphicsChange} config={config}/>\r\n                <AntdLegend onChange={this.legendChange} config={config.legend}/>\r\n                <AntdCartesianCoordinateSys onChange={this.barCoordinateSysChange} config={config}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {AntdBarCommonStyleConfig};\r\n\r\n\r\nexport interface AntdBarGraphicsProps {\r\n    config?: WritableBarOptions;\r\n\r\n    onChange(config: WritableBarOptions): void;\r\n}\r\n\r\nexport const AntdBarGraphics: React.FC<AntdBarGraphicsProps> = ({config, onChange}) => {\r\n\r\n    const barColorChange = (data: ColorModeValue) => {\r\n        const {mode, value} = data;\r\n        switch (mode) {\r\n            case 'single':\r\n                onChange({barStyle: {fill: value as string}});\r\n                break;\r\n            case 'multi':\r\n                onChange({color: value, barStyle: {fill: undefined}});\r\n                break;\r\n            case 'gradient':\r\n                onChange({barStyle: {fill: `l(0) 0:${value[0]} 1:${value[1]}`}});\r\n                break;\r\n        }\r\n    }\r\n\r\n    const buildColorModeData = (): ColorModeValue => {\r\n        let mode = 'single', value: string | string[] = '#fff';\r\n        if ((config?.barStyle as ShapeAttrs)?.fill) {\r\n            const fill = (config?.barStyle as ShapeAttrs).fill as string;\r\n            if (fill.startsWith('l')) {\r\n                mode = 'gradient';\r\n                value = [fill.split(':')[1].split(' ')[0], fill.split(':')[2].split(' ')[0]];\r\n            } else {\r\n                mode = 'single';\r\n                value = fill;\r\n            }\r\n        } else if (config?.color) {\r\n            mode = 'multi';\r\n            value = config?.color as string[];\r\n        }\r\n        return {mode, value};\r\n    }\r\n\r\n    return (\r\n        <Accordion title={'图形'}>\r\n            <ConfigItem title={'颜色'} itemStyle={{width: '100%'}} contentStyle={{width: '85%'}}>\r\n                <ColorMode onChange={barColorChange} data={buildColorModeData()}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'宽度'}>\r\n                <UnderLineInput type={'number'} min={1}\r\n                                onChange={(e) => onChange({maxBarWidth: parseInt(e.target.value)})}\r\n                                defaultValue={config!.maxBarWidth}/>\r\n            </ConfigItem>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\n\r\nexport const AntdBarFieldMapping: React.FC<ConfigType<AntdCommonBar>> = ({instance}) => {\r\n    const config = instance.getConfig()!.style;\r\n    const {data, xField, yField, seriesField} = config!;\r\n    const options: Option[] = [];\r\n    if (data && data.length >= 1) {\r\n        const dataObj = data[0];\r\n        Object.keys(dataObj).forEach(key => options.push({label: key, value: key}))\r\n    }\r\n\r\n    const fieldChange = (config: WritableBarOptions) => {\r\n        instance.update({style: config});\r\n    }\r\n\r\n    return (\r\n        <ConfigCard title={'字段映射'}>\r\n            <ConfigItem title={'X字段'}>\r\n                <Select options={options} defaultValue={xField} onChange={(value => fieldChange({xField: value}))}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'Y字段'}>\r\n                <Select options={options} defaultValue={yField} onChange={(value => fieldChange({yField: value}))}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'分类字段'}>\r\n                <Select options={options} defaultValue={seriesField}\r\n                        onChange={(value => fieldChange({seriesField: value}))}/>\r\n            </ConfigItem>\r\n        </ConfigCard>\r\n    )\r\n}\r\n"],"sourceRoot":""}