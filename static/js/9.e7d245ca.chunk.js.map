{"version":3,"sources":["comps/antd-common/rose/AntdRoseCommonConfig.tsx"],"names":["AntdRoseCommonStyleConfig","roseGraphicsChange","config","props","instance","update","style","legendChange","legend","roseConfig","this","getConfig","onChange","AntdRoseGraphicsConfig","Component","title","type","min","max","step","defaultValue","radius","event","parseFloat","target","value","innerRadius","startAngle","Math","PI","endAngle","itemStyle","width","contentStyle","data","mode","color","sectorStyle","fill","Array","isArray","length","buildColorModeData","exclude","stroke","height","borderRadius","showText","lineWidth","parseInt","label","offset","fontSize","fontWeight","autoRotate","rotate","StatisticTextConfig","useState","disEnable","setDisEnable","content","disabled","offsetX","offsetY","AntdRoseFieldMapping","xField","yField","seriesField","options","dataObj","Object","keys","forEach","key","push","fieldChange"],"mappings":"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","file":"static/js/9.e7d245ca.chunk.js","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport ConfigItem from \"../../../lib/lc-config-item/ConfigItem\";\r\nimport UnderLineInput from \"../../../lib/lc-input/UnderLineInput\";\r\nimport {WritableBarOptions, WritableRoseOptions} from \"../types\";\r\nimport ColorMode, {ColorModeValue} from \"../../../lib/lc-color-mode/ColorMode\";\r\nimport BaseColorPicker from \"../../../lib/lc-color-picker/BaseColorPicker\";\r\nimport CfgItemBorder from \"../../../lib/lc-config-item/CfgItemBorder\";\r\nimport {RoseOptions, ShapeStyle, StatisticText} from \"@antv/g2plot\";\r\nimport LcSwitch from \"../../../lib/lc-switch/LcSwitch\";\r\nimport {Types} from \"@antv/g2\";\r\nimport {AntdLegend} from \"../config/AntdFragment\";\r\nimport {Legend} from \"@antv/g2plot/lib/types/legend\";\r\nimport Accordion from \"../../../lib/lc-accordion/Accordion\";\r\nimport AntdCommonRose from \"./AntdCommonRose\";\r\nimport {Option} from \"../../../lib/lc-select/SelectType\";\r\nimport ConfigCard from \"../../../lib/lc-config-card/ConfigCard\";\r\nimport Select from \"../../../lib/lc-select/Select\";\r\n\r\nexport default class AntdRoseCommonStyleConfig extends Component<ConfigType> {\r\n\r\n    roseGraphicsChange = (config: WritableRoseOptions) => {\r\n        const instance = this.props.instance as AntdCommonRose;\r\n        instance.update({style: config});\r\n    }\r\n\r\n    legendChange = (legend: Legend) => {\r\n        const instance = this.props.instance as AntdCommonRose;\r\n        instance.update({style: {legend}});\r\n    }\r\n\r\n    render() {\r\n        const instance = this.props.instance as AntdCommonRose;\r\n        const roseConfig = instance.getConfig()!.style as RoseOptions;\r\n        return (\r\n            <>\r\n                <AntdLegend onChange={this.legendChange} config={roseConfig.legend}/>\r\n                <AntdRoseGraphicsConfig onChange={this.roseGraphicsChange} config={roseConfig}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface AntdRoseGraphicsConfigProps {\r\n    config: RoseOptions;\r\n\r\n    onChange(config: WritableRoseOptions): void;\r\n}\r\n\r\nexport const AntdRoseGraphicsConfig: React.FC<AntdRoseGraphicsConfigProps> = ({config, onChange}) => {\r\n\r\n    const RoseColorChange = (data: ColorModeValue) => {\r\n        const {mode, value} = data;\r\n        switch (mode) {\r\n            case 'single':\r\n            case 'multi':\r\n                onChange({color: value});\r\n                break;\r\n            case 'gradient':\r\n                onChange({sectorStyle: {fill: `l(0.4,0.5) 0:${value[0]} 1:${value[1]}`}});\r\n                break;\r\n        }\r\n    }\r\n\r\n    const buildColorModeData = (): ColorModeValue => {\r\n        let mode = 'single', value: string | string[];\r\n        let multi = Array.isArray(config.color) && config.color.length > 1;\r\n        if (multi) {\r\n            mode = 'multi';\r\n            value = config.color as string[];\r\n        } else\r\n            value = config.color as string;\r\n        return {mode, value};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Accordion title={'图形'}>\r\n                <ConfigItem title={\"半径\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={1} step={0.01}\r\n                                    defaultValue={config?.radius || 0.9}\r\n                                    onChange={(event) => onChange({radius: parseFloat(event.target.value)})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"内径\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={1} step={0.01}\r\n                                    defaultValue={config?.innerRadius || 0}\r\n                                    onChange={(event) => onChange({innerRadius: parseFloat(event.target.value)})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"起始角度\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={2} step={0.01}\r\n                                    defaultValue={config?.startAngle || 0}\r\n                                    onChange={(event) => onChange({startAngle: parseFloat(event.target.value) * Math.PI})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"结束角度\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={2} step={0.01}\r\n                                    defaultValue={config?.endAngle || 2}\r\n                                    onChange={(event) => onChange({endAngle: parseFloat(event.target.value) * Math.PI})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'} itemStyle={{width: '100%'}} contentStyle={{width: '85%'}}>\r\n                    <ColorMode onChange={RoseColorChange} data={buildColorModeData()}\r\n                               exclude={['gradient']}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'描边颜色'}>\r\n                    <CfgItemBorder width={'100%'}>\r\n                        <BaseColorPicker\r\n                            defaultValue={(config?.sectorStyle as ShapeStyle)?.stroke || '#fff'}\r\n                            onChange={(value) => onChange({sectorStyle: {stroke: value}})}\r\n                            style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n                <ConfigItem title={'描边宽度'}>\r\n                    <UnderLineInput type={\"number\"} min={0}\r\n                                    defaultValue={(config?.sectorStyle as ShapeStyle)?.lineWidth || 0}\r\n                                    onChange={(event) => onChange({sectorStyle: {lineWidth: parseInt(event.target.value)}})}/>\r\n                </ConfigItem>\r\n            </Accordion>\r\n            <Accordion title={\"标签\"}>\r\n                <ConfigItem title={'偏移'}>\r\n                    <UnderLineInput type={\"number\"}\r\n                                    defaultValue={(config?.label as Types.GeometryLabelCfg)?.offset || 0}\r\n                                    onChange={(event) => onChange({label: {offset: parseInt(event.target.value)}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"字号\"}>\r\n                    <UnderLineInput type={'number'} min={0}\r\n                                    defaultValue={(config?.label as Types.GeometryLabelCfg)?.style?.fontSize || 12}\r\n                                    onChange={(event) => onChange({label: {style: {fontSize: parseInt(event.target.value)}}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"加粗\"}>\r\n                    <UnderLineInput type={'number'} min={100} max={900} step={100}\r\n                                    defaultValue={parseInt((config?.label as Types.GeometryLabelCfg)?.style?.fontWeight || 500)}\r\n                                    onChange={(event) => onChange({label: {style: {fontWeight: parseInt(event.target.value)}}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"自动旋转\"}>\r\n                    <LcSwitch defaultValue={!!(config?.label as Types.GeometryLabelCfg)?.autoRotate}\r\n                              onChange={(value) => onChange({label: {autoRotate: value}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"旋转角度\"}>\r\n                    <UnderLineInput type={'number'} min={0} max={2} step={0.01}\r\n                                    defaultValue={(config?.label as Types.GeometryLabelCfg).rotate || 0}\r\n                                    onChange={(event) => onChange({label: {rotate: parseFloat(event.target.value) * Math.PI}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'}>\r\n                    <CfgItemBorder width={'100%'}>\r\n                        <BaseColorPicker\r\n                            defaultValue={(config?.label as Types.GeometryLabelCfg)?.style?.fill || '#fff'}\r\n                            onChange={(value) => onChange({label: {style: {fill: value}}})}\r\n                            style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n            </Accordion>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport interface AntdStatisticTextConfigProps {\r\n    config: StatisticText | false;\r\n\r\n    onChange(config: StatisticText | false): void;\r\n}\r\n\r\nexport const StatisticTextConfig: React.FC<AntdStatisticTextConfigProps> = ({config, onChange}) => {\r\n\r\n    const [disEnable, setDisEnable] = useState(!!config);\r\n\r\n    return (\r\n        <>\r\n            <ConfigItem title={\"开启\"}>\r\n                <LcSwitch defaultValue={disEnable}\r\n                          onChange={(value) => {\r\n                              let titleConfig: StatisticText | boolean;\r\n                              if (value) titleConfig = {style: {fontSize: '12px', color: '#fff'}, content: 'text'}\r\n                              else titleConfig = false;\r\n                              onChange(titleConfig)\r\n                              setDisEnable(value)\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"内容\"}>\r\n                <UnderLineInput defaultValue={(config as StatisticText)?.content || 'text'}\r\n                                disabled={!disEnable}\r\n                                onChange={(event) => onChange({content: event.target.value})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"字号\"}>\r\n                <UnderLineInput type={'number'} min={10}\r\n                                disabled={!disEnable}\r\n                                defaultValue={parseInt(((config as StatisticText)?.style as any)?.fontSize || '12')}\r\n                                onChange={(event) => onChange({style: {fontSize: event.target.value + 'px'}})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"加粗\"}>\r\n                <UnderLineInput type={'number'} min={100} max={900} step={100}\r\n                                disabled={!disEnable}\r\n                                defaultValue={parseInt(((config as StatisticText)?.style as any)?.fontWeight || '500')}\r\n                                onChange={(event) => onChange({style: {fontWeight: parseInt(event.target.value)}})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder width={'100%'}>\r\n                    <BaseColorPicker\r\n                        disabled={!disEnable}\r\n                        defaultValue={((config as StatisticText)?.style as any)?.value || '#fff'}\r\n                        onChange={(value) => onChange({style: {color: value}})}\r\n                        style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"x偏移\"}>\r\n                <UnderLineInput type={'number'}\r\n                                disabled={!disEnable}\r\n                                defaultValue={(config as StatisticText)?.offsetX || 0}\r\n                                onChange={(event) => onChange({offsetX: parseInt(event.target.value)})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"y偏移\"}>\r\n                <UnderLineInput type={'number'}\r\n                                disabled={!disEnable}\r\n                                defaultValue={(config as StatisticText)?.offsetY || 0}\r\n                                onChange={(event) => onChange({offsetY: parseInt(event.target.value)})}/>\r\n            </ConfigItem>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport const AntdRoseFieldMapping: React.FC<ConfigType<AntdCommonRose>> = ({instance}) => {\r\n    const config = instance.getConfig()!.style;\r\n    const {data, xField, yField, seriesField} = config!;\r\n    const options: Option[] = [];\r\n    if (data && data.length >= 1) {\r\n        const dataObj = data[0];\r\n        Object.keys(dataObj).forEach(key => options.push({label: key, value: key}))\r\n    }\r\n\r\n    const fieldChange = (config: WritableBarOptions) => {\r\n        instance.update({style: config});\r\n    }\r\n\r\n    return (\r\n        <ConfigCard title={'字段映射'}>\r\n            <ConfigItem title={'X字段'}>\r\n                <Select options={options} defaultValue={xField} onChange={(value => fieldChange({xField: value}))}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'Y字段'}>\r\n                <Select options={options} defaultValue={yField} onChange={(value => fieldChange({yField: value}))}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'分类字段'}>\r\n                <Select options={options} defaultValue={seriesField}\r\n                        onChange={(value => fieldChange({seriesField: value}))}/>\r\n            </ConfigItem>\r\n        </ConfigCard>\r\n    )\r\n}\r\n"],"sourceRoot":""}