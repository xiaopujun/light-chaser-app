{"version":3,"sources":["comps/antd/pie/AntdPieStyleConfig.tsx"],"names":["AntdPieStyleConfig","pieGraphicsChange","config","props","instance","update","style","legendChange","legend","pieConfig","this","getConfig","onChange","AntdPieGraphicsConfig","Component","title","type","min","max","step","defaultValue","radius","event","parseFloat","target","value","innerRadius","startAngle","Math","PI","endAngle","itemStyle","width","contentStyle","data","mode","color","pieStyle","fill","Array","isArray","length","buildColorModeData","exclude","stroke","height","borderRadius","showText","lineWidth","parseInt","StatisticTextConfig","statistic","content","label","options","offset","fontSize","fontWeight","autoRotate","rotate","useState","disEnable","setDisEnable","disabled","offsetX","offsetY"],"mappings":"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","file":"static/js/20.bef152a9.chunk.js","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport ConfigItem from \"../../../lib/lc-config-item/ConfigItem\";\r\nimport UnderLineInput from \"../../../lib/lc-input/UnderLineInput\";\r\nimport AntdPie from \"./AntdPie\";\r\nimport {WritablePieOptions} from \"../../antd-common/types\";\r\nimport ColorMode, {ColorModeValue} from \"../../../lib/lc-color-mode/ColorMode\";\r\nimport BaseColorPicker from \"../../../lib/lc-color-picker/BaseColorPicker\";\r\nimport CfgItemBorder from \"../../../lib/lc-config-item/CfgItemBorder\";\r\nimport {PieOptions, ShapeStyle, StatisticText} from \"@antv/g2plot\";\r\nimport LcSwitch from \"../../../lib/lc-switch/LcSwitch\";\r\nimport Select from '../../../lib/lc-select/Select';\r\nimport {Types} from \"@antv/g2\";\r\nimport {AntdLegend} from \"../../antd-common/config/AntdFragment\";\r\nimport {Legend} from \"@antv/g2plot/lib/types/legend\";\r\nimport Accordion from \"../../../lib/lc-accordion/Accordion\";\r\n\r\nexport default class AntdPieStyleConfig extends Component<ConfigType> {\r\n\r\n    pieGraphicsChange = (config: WritablePieOptions) => {\r\n        const instance = this.props.instance as AntdPie;\r\n        instance.update({style: config});\r\n    }\r\n\r\n    legendChange = (legend: Legend) => {\r\n        const instance = this.props.instance as AntdPie;\r\n        instance.update({style: {legend}});\r\n    }\r\n\r\n    render() {\r\n        const instance = this.props.instance as AntdPie;\r\n        const pieConfig = instance.getConfig()!.style as PieOptions;\r\n        return (\r\n            <>\r\n                <AntdLegend onChange={this.legendChange} config={pieConfig.legend}/>\r\n                <AntdPieGraphicsConfig onChange={this.pieGraphicsChange} config={pieConfig}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface AntdPieGraphicsConfigProps {\r\n    config: PieOptions;\r\n\r\n    onChange(config: WritablePieOptions): void;\r\n}\r\n\r\nexport const AntdPieGraphicsConfig: React.FC<AntdPieGraphicsConfigProps> = ({config, onChange}) => {\r\n\r\n    const pieColorChange = (data: ColorModeValue) => {\r\n        const {mode, value} = data;\r\n        switch (mode) {\r\n            case 'single':\r\n            case 'multi':\r\n                onChange({color: value});\r\n                break;\r\n            case 'gradient':\r\n                onChange({pieStyle: {fill: `l(0.4,0.5) 0:${value[0]} 1:${value[1]}`}});\r\n                break;\r\n        }\r\n    }\r\n\r\n    const buildColorModeData = (): ColorModeValue => {\r\n        let mode = 'single', value: string | string[];\r\n        let multi = Array.isArray(config.color) && config.color.length > 1;\r\n        if (multi) {\r\n            mode = 'multi';\r\n            value = config.color as string[];\r\n        } else\r\n            value = config.color as string;\r\n        return {mode, value};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Accordion title={'图形'}>\r\n                <ConfigItem title={\"半径\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={1} step={0.01}\r\n                                    defaultValue={config?.radius || 0.9}\r\n                                    onChange={(event) => onChange({radius: parseFloat(event.target.value)})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"内径\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={1} step={0.01}\r\n                                    defaultValue={config?.innerRadius || 0}\r\n                                    onChange={(event) => onChange({innerRadius: parseFloat(event.target.value)})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"起始角度\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={2} step={0.01}\r\n                                    defaultValue={config?.startAngle || 0}\r\n                                    onChange={(event) => onChange({startAngle: parseFloat(event.target.value) * Math.PI})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"结束角度\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={2} step={0.01}\r\n                                    defaultValue={config?.endAngle || 0}\r\n                                    onChange={(event) => onChange({endAngle: parseFloat(event.target.value) * Math.PI})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'} itemStyle={{width: '100%'}} contentStyle={{width: '85%'}}>\r\n                    <ColorMode onChange={pieColorChange} data={buildColorModeData()}\r\n                               exclude={['gradient']}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'描边颜色'}>\r\n                    <CfgItemBorder width={'100%'}>\r\n                        <BaseColorPicker\r\n                            defaultValue={(config?.pieStyle as ShapeStyle)?.stroke || '#fff'}\r\n                            onChange={(value) => onChange({pieStyle: {stroke: value}})}\r\n                            style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n                <ConfigItem title={'描边宽度'}>\r\n                    <UnderLineInput type={\"number\"} min={0}\r\n                                    defaultValue={(config?.pieStyle as ShapeStyle)?.lineWidth || 0}\r\n                                    onChange={(event) => onChange({pieStyle: {lineWidth: parseInt(event.target.value)}})}/>\r\n                </ConfigItem>\r\n            </Accordion>\r\n\r\n            <Accordion title={'标题'}>\r\n                <StatisticTextConfig config={config?.statistic?.title || false}\r\n                                     onChange={(config) => onChange({statistic: {title: config}})}/>\r\n            </Accordion>\r\n\r\n            <Accordion title={'内容'}>\r\n                <StatisticTextConfig config={config?.statistic?.content || false}\r\n                                     onChange={(config) => onChange({statistic: {content: config}})}/>\r\n            </Accordion>\r\n\r\n            <Accordion title={\"标签\"}>\r\n                <ConfigItem title={'位置'}>\r\n                    <Select defaultValue={(config?.label as Types.GeometryLabelCfg)?.type || 'outer'}\r\n                            onChange={(value) => onChange({label: {type: value}})}\r\n                            options={[\r\n                                {value: 'inner', label: '内测'},\r\n                                {value: 'outer', label: '外侧'}]}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'偏移'}>\r\n                    <UnderLineInput type={\"number\"}\r\n                                    defaultValue={(config?.label as Types.GeometryLabelCfg)?.offset || 0}\r\n                                    onChange={(event) => onChange({label: {offset: parseInt(event.target.value)}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"字号\"}>\r\n                    <UnderLineInput type={'number'} min={0}\r\n                                    defaultValue={(config?.label as Types.GeometryLabelCfg)?.style?.fontSize || 12}\r\n                                    onChange={(event) => onChange({label: {style: {fontSize: parseInt(event.target.value)}}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"加粗\"}>\r\n                    <UnderLineInput type={'number'} min={100} max={900} step={100}\r\n                                    defaultValue={parseInt((config?.label as Types.GeometryLabelCfg)?.style?.fontWeight || 500)}\r\n                                    onChange={(event) => onChange({label: {style: {fontWeight: parseInt(event.target.value)}}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"自动旋转\"}>\r\n                    <LcSwitch defaultValue={!!(config?.label as Types.GeometryLabelCfg)?.autoRotate}\r\n                              onChange={(value) => onChange({label: {autoRotate: value}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"旋转角度\"}>\r\n                    <UnderLineInput type={'number'} min={0} max={2} step={0.01}\r\n                                    defaultValue={(config?.label as Types.GeometryLabelCfg).rotate || 0}\r\n                                    onChange={(event) => onChange({label: {rotate: parseFloat(event.target.value) * Math.PI}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'}>\r\n                    <CfgItemBorder width={'100%'}>\r\n                        <BaseColorPicker\r\n                            defaultValue={(config?.label as Types.GeometryLabelCfg)?.style?.fill || '#fff'}\r\n                            onChange={(value) => onChange({label: {style: {fill: value}}})}\r\n                            style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n            </Accordion>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport interface AntdStatisticTextConfigProps {\r\n    config: StatisticText | false;\r\n\r\n    onChange(config: StatisticText | false): void;\r\n}\r\n\r\nexport const StatisticTextConfig: React.FC<AntdStatisticTextConfigProps> = ({config, onChange}) => {\r\n\r\n    const [disEnable, setDisEnable] = useState(!!config);\r\n\r\n    return (\r\n        <>\r\n            <ConfigItem title={\"开启\"}>\r\n                <LcSwitch defaultValue={disEnable}\r\n                          onChange={(value) => {\r\n                              let titleConfig: StatisticText | boolean;\r\n                              if (value) titleConfig = {style: {fontSize: '12px', color: '#fff'}, content: 'text'}\r\n                              else titleConfig = false;\r\n                              onChange(titleConfig)\r\n                              setDisEnable(value)\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"内容\"}>\r\n                <UnderLineInput defaultValue={(config as StatisticText)?.content || 'text'}\r\n                                disabled={!disEnable}\r\n                                onChange={(event) => onChange({content: event.target.value})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"字号\"}>\r\n                <UnderLineInput type={'number'} min={10}\r\n                                disabled={!disEnable}\r\n                                defaultValue={parseInt(((config as StatisticText)?.style as any)?.fontSize || '12')}\r\n                                onChange={(event) => onChange({style: {fontSize: event.target.value + 'px'}})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"加粗\"}>\r\n                <UnderLineInput type={'number'} min={100} max={900} step={100}\r\n                                disabled={!disEnable}\r\n                                defaultValue={parseInt(((config as StatisticText)?.style as any)?.fontWeight || '500')}\r\n                                onChange={(event) => onChange({style: {fontWeight: parseInt(event.target.value)}})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder width={'100%'}>\r\n                    <BaseColorPicker\r\n                        disabled={!disEnable}\r\n                        defaultValue={((config as StatisticText)?.style as any)?.value || '#fff'}\r\n                        onChange={(value) => onChange({style: {color: value}})}\r\n                        style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"x偏移\"}>\r\n                <UnderLineInput type={'number'}\r\n                                disabled={!disEnable}\r\n                                defaultValue={(config as StatisticText)?.offsetX || 0}\r\n                                onChange={(event) => onChange({offsetX: parseInt(event.target.value)})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"y偏移\"}>\r\n                <UnderLineInput type={'number'}\r\n                                disabled={!disEnable}\r\n                                defaultValue={(config as StatisticText)?.offsetY || 0}\r\n                                onChange={(event) => onChange({offsetY: parseInt(event.target.value)})}/>\r\n            </ConfigItem>\r\n        </>\r\n    )\r\n}\r\n\r\n//\r\n// export interface AntdFontProps {\r\n//     config: LooseObject;\r\n//     disabled?: boolean;\r\n//\r\n//     onChange(config: LooseObject): void;\r\n// }\r\n//\r\n// export const AntdFontConfig: React.FC<AntdFontProps> = ({config, disabled, onChange}) => {\r\n//\r\n//     return (\r\n//         <>\r\n//             <ConfigItem title={\"字号\"}>\r\n//                 <UnderLineInput type={'number'} min={10}\r\n//                                 disabled={disabled}\r\n//                                 defaultValue={parseInt(config?.fontSize) || '12'}\r\n//                                 onChange={(event) => onChange({fontSize: event.target.value + 'px'})}/>\r\n//             </ConfigItem>\r\n//             <ConfigItem title={\"加粗\"}>\r\n//                 <UnderLineInput type={'number'} min={100} max={900} step={100}\r\n//                                 disabled={disabled}\r\n//                                 defaultValue={parseInt(config?.fontWeight) || '500'}\r\n//                                 onChange={(event) => onChange({fontWeight: parseInt(event.target.value)})}/>\r\n//             </ConfigItem>\r\n//             <ConfigItem title={'颜色'}>\r\n//                 <CfgItemBorder width={'100%'}>\r\n//                     <BaseColorPicker\r\n//                         disabled={disabled}\r\n//                         defaultValue={config?.color || '#fff'}\r\n//                         onChange={(value) => onChange({color: value})}\r\n//                         style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n//                 </CfgItemBorder>\r\n//             </ConfigItem>\r\n//         </>\r\n//     )\r\n// }"],"sourceRoot":""}