{"version":3,"sources":["comps/antd-common/config/axis/AxisConfig.tsx","comps/antd-common/config/AntdFragment.tsx","comps/antd-common/bar/AntdBarCommonConfig.tsx"],"names":["BaseColorPicker","React","lazy","LcSwitch","UnderLineInput","Select","Radio","AxisConfig","props","oldData","undefined","emptyData","grid","line","title","label","tickLine","subTickLine","config","this","onChange","Accordion","showSwitch","defaultValue","value","ConfigItem","contentStyle","width","paddingLeft","position","options","data","Component","AxisSubTickLine","initConfig","count","length","style","stroke","lineWidth","useState","enable","setEnable","subTickLineCount","setSubTickLineCount","subTickLineLength","setSubTickLineLength","subTickLineWidth","setSubTickLineWidth","subTickLineColor","setSubTickLineColor","ConfigCard","disabled","e","parseInt","target","type","min","max","CfgItemBorder","height","borderRadius","showText","AxisTickLine","alignTick","setAlignTick","setLength","setWidth","color","setColor","AxisGridLine","axisTitleDisable","setAxisTitleDisable","AxisLine","axisLineDisable","setAxisLineDisable","setLineWidth","lineColor","setLineColor","AxisTitle","text","fill","titlePos","setTitlePos","setTitle","titleColor","setTitleColor","placeholder","offset","AxisText","rotate","step","AntdLegend","direction","itemName","fontSize","AntdBarGraphics","maxBarWidth","AntdCartesianCoordinateSys","xAxis","yAxis","AntdBarCommonStyleConfig","legendChange","legend","instance","update","barGraphicsChange","barCoordinateSysChange","getConfig"],"mappings":"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","file":"static/js/12.449bf944.chunk.js","sourcesContent":["import React, {ChangeEvent, Component, useState} from 'react';\r\nimport './AxisConfig.less';\r\nimport ConfigCard from \"../../../../lib/lc-config-card/ConfigCard\";\r\nimport ConfigItem from \"../../../../lib/lc-config-item/ConfigItem\";\r\nimport CfgItemBorder from \"../../../../lib/lc-config-item/CfgItemBorder\";\r\nimport {Axis} from \"@antv/g2plot\";\r\nimport Accordion from \"../../../../lib/lc-accordion/Accordion\";\r\nimport {Types} from \"@antv/g2\";\r\nimport {AxisLabelCfg, AxisLineCfg, AxisSubTickLineCfg, AxisTickLineCfg, AxisTitleCfg} from \"@antv/component/esm\";\r\nimport {ShapeAttrs} from \"@antv/g-base\";\r\nimport {AxisGridCfg} from \"@antv/g2/esm/interface\";\r\n\r\n\r\nconst BaseColorPicker = React.lazy(() => import('../../../../lib/lc-color-picker/BaseColorPicker'));\r\nconst LcSwitch = React.lazy(() => import('../../../../lib/lc-switch/LcSwitch'));\r\nconst UnderLineInput = React.lazy(() => import('../../../../lib/lc-input/UnderLineInput'));\r\nconst Select = React.lazy(() => import('../../../../lib/lc-select/Select'));\r\nconst Radio = React.lazy(() => import('../../../../lib/lc-radio/Radio'));\r\n\r\ninterface AxisConfigProps {\r\n    config?: Axis;\r\n    onChange: (data?: Axis) => void;\r\n    title?: string;\r\n}\r\n\r\n/**\r\n * 轴线配置项\r\n */\r\nclass AxisConfig extends Component<AxisConfigProps> {\r\n\r\n    oldData: Axis | undefined = undefined;\r\n    emptyData: Axis = {\r\n        grid: null,\r\n        line: null,\r\n        title: null,\r\n        label: null,\r\n        tickLine: null,\r\n        subTickLine: null,\r\n    }\r\n\r\n    constructor(props: AxisConfigProps) {\r\n        super(props);\r\n        this.oldData = {...props?.config} || null;\r\n    }\r\n\r\n    render() {\r\n        const {config, title = '坐标轴', onChange} = this.props;\r\n        return (\r\n            <Accordion title={title} showSwitch={true} defaultValue={!!config}\r\n                       onChange={value => onChange(value ? this.oldData : this.emptyData)}>\r\n                <ConfigItem title={'位置'} contentStyle={{width: '250px', paddingLeft: '20px'}}>\r\n                    <Radio defaultValue={(config as Types.AxisCfg).position || 'right'}\r\n                           onChange={(value => onChange({position: value as Types.AxisCfg[\"position\"]}))}\r\n                           options={[{label: '上', value: 'top'},\r\n                               {label: '下', value: 'bottom'},\r\n                               {label: '左', value: 'left'},\r\n                               {label: '右', value: 'right'}]}/>\r\n                </ConfigItem>\r\n                <AxisText config={(config as Types.AxisCfg).label!} onChange={(data => onChange({label: data}))}/>\r\n                <AxisTitle config={(config as Types.AxisCfg).title!} onChange={(data => onChange({title: data}))}/>\r\n                <AxisLine config={(config as Types.AxisCfg).line!} onChange={(data => onChange({line: data}))}/>\r\n                <AxisGridLine config={(config as Types.AxisCfg).grid!} onChange={(data => onChange({grid: data}))}/>\r\n                <AxisTickLine config={(config as Types.AxisCfg).tickLine!}\r\n                              onChange={(data => onChange({tickLine: data}))}/>\r\n                <AxisSubTickLine config={(config as Types.AxisCfg).subTickLine!}\r\n                                 onChange={(data => onChange({subTickLine: data}))}/>\r\n            </Accordion>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface AxisSubTickLineProps {\r\n    config: AxisSubTickLineCfg;\r\n    onChange: (data: AxisSubTickLineCfg | null) => void;\r\n}\r\n\r\nexport const AxisSubTickLine: React.FC<AxisSubTickLineProps> = ({config, onChange}) => {\r\n\r\n    const initConfig: AxisSubTickLineCfg = config || {\r\n        count: 5,\r\n        length: 1,\r\n        style: {stroke: '#fff', lineWidth: 1} as ShapeAttrs\r\n    };\r\n\r\n    const [enable, setEnable] = useState(!!config);\r\n    const [subTickLineCount, setSubTickLineCount] = useState(config?.count || 0);\r\n    const [subTickLineLength, setSubTickLineLength] = useState(config?.length || 0);\r\n    const [subTickLineWidth, setSubTickLineWidth] = useState((config?.style as ShapeAttrs)?.lineWidth || 0);\r\n    const [subTickLineColor, setSubTickLineColor] = useState((config?.style as ShapeAttrs)?.stroke || '#ffffff');\r\n    return (\r\n        <ConfigCard title={'子刻度'}>\r\n            <ConfigItem title={'开启'}>\r\n                <LcSwitch defaultValue={enable}\r\n                          onChange={value => {\r\n                              onChange(value ? initConfig : null);\r\n                              if (!value) {\r\n                                  setEnable(true);\r\n                              } else {\r\n                                  setEnable(false);\r\n                                  setSubTickLineCount(5);\r\n                                  setSubTickLineLength(2);\r\n                                  setSubTickLineWidth(2);\r\n                                  setSubTickLineColor('#ffffff')\r\n                              }\r\n\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'数量'}>\r\n                <UnderLineInput value={subTickLineCount}\r\n                                disabled={!enable}\r\n                                onChange={e => {\r\n                                    const value = parseInt(e.target.value);\r\n                                    onChange({count: value});\r\n                                    setSubTickLineCount(value);\r\n                                }}\r\n                                type={'number'}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'长度'}>\r\n                <UnderLineInput value={subTickLineLength}\r\n                                disabled={!enable}\r\n                                onChange={e => {\r\n                                    const value = parseInt(e.target.value);\r\n                                    onChange({length: value});\r\n                                    setSubTickLineLength(value);\r\n                                }}\r\n                                type={'number'}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'宽度'}>\r\n                <UnderLineInput value={subTickLineWidth}\r\n                                disabled={!enable}\r\n                                onChange={e => {\r\n                                    const value = parseInt(e.target.value);\r\n                                    onChange({style: {lineWidth: value}});\r\n                                    setSubTickLineWidth(value);\r\n                                }}\r\n                                min={0}\r\n                                max={5}\r\n                                type={'number'}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder>\r\n                    <BaseColorPicker value={subTickLineColor}\r\n                                     disabled={!enable}\r\n                                     onChange={value => {\r\n                                         onChange({style: {stroke: value}});\r\n                                         setSubTickLineColor(value);\r\n                                     }}\r\n                                     style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n        </ConfigCard>\r\n    )\r\n}\r\n\r\n\r\nexport interface AxisTickLineProps {\r\n    config: AxisTickLineCfg;\r\n    onChange: (data: AxisTickLineCfg | null) => void;\r\n}\r\n\r\nexport const AxisTickLine: React.FC<AxisTickLineProps> = ({config, onChange}) => {\r\n\r\n    const initConfig: AxisGridCfg = config || {\r\n        alignTick: true,\r\n        length: 1,\r\n        style: {stroke: '#fff', lineWidth: 1} as ShapeAttrs\r\n    };\r\n\r\n    const [enable, setEnable] = useState(!!config);\r\n    const [alignTick, setAlignTick] = useState(config?.alignTick || false);\r\n    const [length, setLength] = useState(config?.length || 0);\r\n    const [width, setWidth] = useState((config?.style as ShapeAttrs)?.lineWidth || 0);\r\n    const [color, setColor] = useState((config?.style as ShapeAttrs)?.stroke || '#ffffff');\r\n\r\n    return (\r\n        <ConfigCard title={'刻度线'}>\r\n            <ConfigItem title={'开启'}>\r\n                <LcSwitch defaultValue={enable}\r\n                          onChange={value => {\r\n                              onChange(value ? initConfig : null);\r\n                              if (!value) {\r\n                                  setEnable(true);\r\n                              } else {\r\n                                  setEnable(false);\r\n                                  setAlignTick(true);\r\n                                  setLength(2);\r\n                                  setWidth(2);\r\n                                  setColor(\"#FFFFFF\");\r\n                              }\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'对齐'}>\r\n                <LcSwitch value={alignTick}\r\n                          disabled={!enable}\r\n                          onChange={value => {\r\n                              onChange({alignTick: value});\r\n                              setAlignTick(value);\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'长度'}>\r\n                <UnderLineInput value={length}\r\n                                disabled={!enable}\r\n                                onChange={e => {\r\n                                    const value = parseInt(e.target.value);\r\n                                    onChange({length: value});\r\n                                    setLength(value);\r\n                                }}\r\n                                type={'number'}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'宽度'}>\r\n                <UnderLineInput value={width}\r\n                                disabled={!enable}\r\n                                onChange={e => {\r\n                                    const value = parseInt(e.target.value);\r\n                                    onChange({style: {lineWidth: value}});\r\n                                    setWidth(value);\r\n                                }}\r\n                                type={'number'}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder>\r\n                    <BaseColorPicker value={color}\r\n                                     disabled={!enable}\r\n                                     onChange={value => {\r\n                                         onChange({style: {stroke: value}});\r\n                                         setColor(value);\r\n                                     }}\r\n                                     style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n        </ConfigCard>\r\n    )\r\n}\r\n\r\nexport interface AxisGridLineProps {\r\n    config: AxisGridCfg;\r\n    onChange: (data: AxisGridCfg | null) => void;\r\n}\r\n\r\n\r\nexport const AxisGridLine: React.FC<AxisGridLineProps> = ({config, onChange}) => {\r\n\r\n    const initConfig: AxisGridCfg = config || {alignTick: true, style: {stroke: '#fff', lineWidth: 1} as ShapeAttrs};\r\n\r\n    const [axisTitleDisable, setAxisTitleDisable] = useState(!!config);\r\n    const [alignTick, setAlignTick] = useState(config?.alignTick || false);\r\n    const [color, setColor] = useState((config?.line?.style as ShapeAttrs)?.stroke || '#ffffff');\r\n\r\n    return (\r\n        <ConfigCard title={'网格线'}>\r\n            <ConfigItem title={'开启'}>\r\n                <LcSwitch defaultValue={axisTitleDisable}\r\n                          onChange={value => {\r\n                              if (!value) {\r\n                                  setAxisTitleDisable(true);\r\n                                  setAlignTick(false);\r\n                              } else {\r\n                                  setAlignTick(true);\r\n                                  setAxisTitleDisable(false);\r\n                              }\r\n                              onChange(value ? initConfig : null)\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'刻度对齐'}>\r\n                <LcSwitch value={alignTick} disabled={axisTitleDisable}\r\n                          onChange={value => {\r\n                              setAlignTick(value);\r\n                              onChange({alignTick: value})\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'线宽'}>\r\n                <UnderLineInput defaultValue={(config?.line?.style as ShapeAttrs)?.lineWidth || 0}\r\n                                disabled={axisTitleDisable}\r\n                                min={0} max={10}\r\n                                onChange={e => onChange({line: {style: {lineWidth: parseInt(e.target.value)}}})}\r\n                                type={'number'}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder>\r\n                    <BaseColorPicker value={color}\r\n                                     disabled={axisTitleDisable}\r\n                                     onChange={value => {\r\n                                         onChange({line: {style: {stroke: value}}});\r\n                                         setColor(value);\r\n                                     }}\r\n                                     style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n        </ConfigCard>\r\n    )\r\n}\r\n\r\nexport interface AxisLIneProps {\r\n    config: AxisLineCfg;\r\n    onChange: (data: AxisLineCfg | null) => void;\r\n}\r\n\r\nexport const AxisLine: React.FC<AxisLIneProps> = ({config, onChange}) => {\r\n\r\n    const initConfig: AxisLineCfg = config || {style: {stroke: '#fff', lineWidth: 1} as ShapeAttrs};\r\n\r\n    const [axisLineDisable, setAxisLineDisable] = useState(!!config);\r\n    const [lineWidth, setLineWidth] = useState(config?.style?.lineWidth || 0);\r\n    const [lineColor, setLineColor] = useState(config?.style?.stroke || '#FFFFFF');\r\n\r\n    return (\r\n        <ConfigCard title={'轴线'}>\r\n            <ConfigItem title={'开启'}>\r\n                <LcSwitch defaultValue={axisLineDisable}\r\n                          onChange={value => {\r\n                              if (!value)\r\n                                  setAxisLineDisable(true);\r\n                              else {\r\n                                  setAxisLineDisable(false);\r\n                                  setLineWidth(2);\r\n                                  setLineColor('#FFFFFF');\r\n                              }\r\n                              onChange(value ? initConfig : null)\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder>\r\n                    <BaseColorPicker value={lineColor}\r\n                                     disabled={axisLineDisable}\r\n                                     onChange={value => {\r\n                                         onChange({style: {stroke: value}});\r\n                                         setLineColor(value);\r\n                                     }}\r\n                                     style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n            <ConfigItem title={'线宽'}>\r\n                <UnderLineInput value={lineWidth} min={0} max={10}\r\n                                disabled={axisLineDisable}\r\n                                onChange={e => {\r\n                                    const value = parseInt(e.target.value);\r\n                                    onChange({style: {lineWidth: value}});\r\n                                    setLineWidth(value);\r\n                                }}\r\n                                type={'number'}/>\r\n            </ConfigItem>\r\n        </ConfigCard>\r\n    )\r\n}\r\n\r\nexport interface AxisTitleProps {\r\n    config: AxisTitleCfg;\r\n    onChange: (data?: AxisTitleCfg | null) => void;\r\n}\r\n\r\nexport const AxisTitle: React.FC<AxisTitleProps> = ({config, onChange}) => {\r\n\r\n    const initConfig = config || {text: '标题', position: 'center', style: {fill: '#fff'}};\r\n\r\n    const [axisTitleDisable, setAxisTitleDisable] = useState(!!config);\r\n    const [titlePos, setTitlePos] = useState(config?.position || 'center');\r\n    const [title, setTitle] = useState(config?.text || '');\r\n    const [titleColor, setTitleColor] = useState(config?.style?.fill || '#ffffff');\r\n\r\n    return (\r\n        <ConfigCard title={'标题'}>\r\n            <ConfigItem title={'开启'}>\r\n                <LcSwitch defaultValue={!!config}\r\n                          onChange={(value) => {\r\n                              if (!value)\r\n                                  setAxisTitleDisable(true)\r\n                              else {\r\n                                  setAxisTitleDisable(false);\r\n                                  setTitlePos('center');\r\n                                  setTitle('标题');\r\n                                  setTitleColor('#ffffff');\r\n                              }\r\n                              onChange(value ? initConfig : null);\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'位置'}>\r\n                <Select options={[\r\n                    {value: 'start', label: '前'},\r\n                    {value: 'center', label: '中'},\r\n                    {value: 'end', label: '后'}]}\r\n                        value={titlePos} placeholder={'请选择位置'}\r\n                        disabled={axisTitleDisable}\r\n                        onChange={value => {\r\n                            onChange({position: value});\r\n                            setTitlePos(value);\r\n                        }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'内容'}>\r\n                <UnderLineInput value={title} disabled={axisTitleDisable}\r\n                                onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n                                    const value = e.target.value;\r\n                                    onChange({text: value});\r\n                                    setTitle(value);\r\n                                }}\r\n                                type={'text'}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder>\r\n                    <BaseColorPicker value={titleColor as string}\r\n                                     disabled={axisTitleDisable}\r\n                                     onChange={value => {\r\n                                         onChange({style: {fill: value}});\r\n                                         setTitleColor(value);\r\n                                     }}\r\n                                     style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n            <ConfigItem title={'偏移量'}>\r\n                <UnderLineInput defaultValue={config?.offset || 0} min={0} type={'number'}\r\n                                disabled={axisTitleDisable}\r\n                                onChange={e => onChange({offset: parseInt(e.target.value)})}/>\r\n            </ConfigItem>\r\n        </ConfigCard>\r\n    )\r\n}\r\n\r\nexport interface AxisTextProps {\r\n    config: AxisLabelCfg;\r\n    onChange: (data: AxisLabelCfg) => void;\r\n}\r\n\r\nexport const AxisText: React.FC<AxisTextProps> = ({config, onChange}) => {\r\n\r\n    return (\r\n        <ConfigCard title={'文本'}>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder>\r\n                    <BaseColorPicker defaultValue={(config.style as ShapeAttrs).fill || '#d5d5d5'}\r\n                                     onChange={value => onChange({style: {fill: value}})}\r\n                                     style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n            <ConfigItem title={'角度'}>\r\n                <UnderLineInput defaultValue={config.rotate || 0} step={0.1} type={'number'}\r\n                                onChange={e => onChange({rotate: parseInt(e.target.value)})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'偏移量'}>\r\n                <UnderLineInput defaultValue={config.offset || 0} type={'number'}\r\n                                onChange={e => onChange({offset: parseInt(e.target.value)})}/>\r\n            </ConfigItem>\r\n        </ConfigCard>\r\n    )\r\n}\r\n\r\nexport default AxisConfig;","import React from \"react\";\r\nimport ConfigCard from \"../../../lib/lc-config-card/ConfigCard\";\r\nimport ConfigItem from \"../../../lib/lc-config-item/ConfigItem\";\r\nimport UnderLineInput from \"../../../lib/lc-input/UnderLineInput\";\r\nimport CfgItemBorder from \"../../../lib/lc-config-item/CfgItemBorder\";\r\nimport BaseColorPicker from \"../../../lib/lc-color-picker/BaseColorPicker\";\r\nimport Accordion from \"../../../lib/lc-accordion/Accordion\";\r\nimport AxisConfig from \"./axis/AxisConfig\";\r\nimport Select from \"../../../lib/lc-select/Select\";\r\nimport {Legend} from \"@antv/g2plot/lib/types/legend\";\r\n\r\nimport {ShapeAttrs} from \"@antv/g-base\";\r\nimport {Types} from \"@antv/g2\";\r\nimport {Axis} from \"@antv/g2plot\";\r\nimport {WritableBarOptions, WritableOptions} from \"../types\";\r\n\r\nexport interface AntdLegendProps {\r\n    config?: Legend;\r\n\r\n    onChange(config: Legend): void;\r\n}\r\n\r\nexport const AntdLegend = (props: AntdLegendProps) => {\r\n    const {onChange, config} = props;\r\n    return (\r\n        <Accordion title={'图例'} showSwitch={true} defaultValue={!!config}\r\n                   onChange={value => onChange(value && config!)}>\r\n            <ConfigItem title={'位置'}>\r\n                <Select defaultValue={(config as Types.LegendCfg)?.position}\r\n                        onChange={(value => onChange({position: value as Types.LegendCfg['position']}))}\r\n                        options={[\r\n                            {value: 'left-top', label: '左上'},\r\n                            {value: 'left', label: '正左'},\r\n                            {value: 'left-bottom', label: '左下'},\r\n                            {value: 'top-left', label: '上左'},\r\n                            {value: 'top', label: '正上'},\r\n                            {value: 'top-right', label: '上右'},\r\n                            {value: 'right-top', label: '右上'},\r\n                            {value: 'right', label: '正右'},\r\n                            {value: 'right-bottom', label: '右下'},\r\n                            {value: 'bottom-left', label: '下左'},\r\n                            {value: 'bottom', label: '正下'},\r\n                            {value: 'bottom-right', label: '下右'},\r\n                        ]}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'方向'}>\r\n                <Select defaultValue={(config as Types.LegendCfg)?.direction}\r\n                        onChange={(value => onChange({direction: value as Types.LegendCfg['direction']}))}\r\n                        options={[\r\n                            {value: 'horizontal', label: '横向'},\r\n                            {value: 'vertical', label: '纵向'},\r\n                        ]}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'字号'}>\r\n                <UnderLineInput type={'number'} min={12}\r\n                                defaultValue={((config as Types.LegendCfg)?.itemName?.style as ShapeAttrs).fontSize || 12}\r\n                                onChange={e => onChange({itemName: {style: {fontSize: parseInt(e.target.value)}}})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder width={'100%'}>\r\n                    <BaseColorPicker defaultValue={((config as Types.LegendCfg)?.itemName?.style as ShapeAttrs).fill!}\r\n                                     onChange={value => onChange({itemName: {style: {fill: value}}})}\r\n                                     style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n        </Accordion>\r\n    );\r\n};\r\n\r\nexport interface AntdBarGraphicsProps {\r\n    config?: WritableBarOptions;\r\n\r\n    onChange(config: WritableBarOptions): void;\r\n}\r\n\r\nexport const AntdBarGraphics: React.FC<AntdBarGraphicsProps> = ({config, onChange}) => {\r\n\r\n    return (\r\n        <Accordion title={'图形'}>\r\n            <ConfigCard title={'条状'}>\r\n                <ConfigItem title={'宽度'}>\r\n                    <UnderLineInput type={'number'} min={1}\r\n                                    onChange={(e) => onChange({maxBarWidth: parseInt(e.target.value)})}\r\n                                    defaultValue={config!.maxBarWidth}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'}>\r\n                    <CfgItemBorder>\r\n                        <BaseColorPicker onChange={(value) => onChange({color: value})}\r\n                                         defaultValue={config!.color as string}\r\n                                         style={{width: '100%', height: '15px', borderRadius: 2}}\r\n                                         showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n            </ConfigCard>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport interface AntdCartesianCoordinateSysProps {\r\n    config?: WritableOptions;\r\n\r\n    onChange(config?: WritableOptions): void;\r\n}\r\n\r\nexport const AntdCartesianCoordinateSys: React.FC<AntdCartesianCoordinateSysProps> = ({config, onChange}) => {\r\n\r\n    const xAxisChange = (data?: Axis) => {\r\n        onChange({xAxis: data});\r\n    }\r\n    const yAxisChange = (data?: Axis) => {\r\n        onChange({yAxis: data});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AxisConfig title={'X轴'} config={config!.xAxis}\r\n                        onChange={xAxisChange}/>\r\n            <AxisConfig title={'Y轴'} config={config!.yAxis}\r\n                        onChange={yAxisChange}/>\r\n        </>\r\n    )\r\n}","import React, {Component} from 'react';\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport {AntdBarGraphics, AntdCartesianCoordinateSys, AntdLegend} from \"../config/AntdFragment\";\r\nimport {Bar, BarOptions} from \"@antv/g2plot\";\r\nimport {Legend} from \"@antv/g2plot/lib/types/legend\";\r\nimport AbstractComponent from \"../../../framework/core/AbstractComponent\";\r\nimport {AntdBarProps} from \"./AntdCommonBar\";\r\n\r\nclass AntdBarCommonStyleConfig extends Component<ConfigType> {\r\n\r\n    legendChange = (legend: Legend) => {\r\n        const instance: AbstractComponent<Bar, AntdBarProps> = this.props.instance;\r\n        instance.update({style: {legend}});\r\n    }\r\n\r\n    barGraphicsChange = (config: BarOptions) => {\r\n        const instance: AbstractComponent<Bar, AntdBarProps> = this.props.instance;\r\n        instance.update({style: config});\r\n    }\r\n\r\n    barCoordinateSysChange = (config: BarOptions) => {\r\n        const instance: AbstractComponent<Bar, AntdBarProps> = this.props.instance;\r\n        instance.update({style: config});\r\n    }\r\n\r\n    render() {\r\n        const {instance} = this.props;\r\n        const config: BarOptions = instance.getConfig().style;\r\n        return (\r\n            <>\r\n                <AntdBarGraphics onChange={this.barGraphicsChange} config={config}/>\r\n                <AntdLegend onChange={this.legendChange} config={config.legend}/>\r\n                <AntdCartesianCoordinateSys onChange={this.barCoordinateSysChange} config={config}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {AntdBarCommonStyleConfig};"],"sourceRoot":""}