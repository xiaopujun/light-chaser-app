{"version":3,"sources":["designer/right/RightStore.ts","comps/common-component/theme-config/ThemeConfig.tsx"],"names":["bgMenu","icon","PictureFilled","name","key","rightStore","activeElem","id","type","menus","activeMenu","visible","setActiveMenu","menu","newMenus","includes","setContentVisible","activeConfig","designerStarter","customComponentInfoMap","getMenuList","length","setNewActiveMenu","i","setTimeout","runInAction","makeObservable","this","observable","action","ThemeConfig","state","editTheme","openThemeEditor","setState","closeEditor","themeChange","theme","instance","designerStore","compInstances","updateTheme","className","onClick","style","width","onSelected","onClose","title","Component"],"mappings":"uJAQaA,EAAqB,CAAC,CAC/BC,K,OAAMC,EACNC,KAAM,eACNC,IAAK,eA4EHC,EAAa,I,aArEf,aAAe,IAAD,gCAcdC,WAAyB,CAACC,GAAI,WAAYC,KAAM,QAdlC,KAkBdC,MAAyBT,EAlBX,KAsBdU,WAAqB,aAtBP,KA0BdC,SAAmB,EA1BL,KA4BdC,cAAgB,SAACC,EAAcC,GACvBA,GAAYA,EAASC,SAAS,EAAKL,cAEvC,EAAKA,WAAaG,EACrB,EAhCa,KAkCdG,kBAAoB,SAACL,GAAD,OAAsB,EAAKA,QAAUA,CAArC,EAlCN,KAoCdM,aAAe,SAACV,EAAYC,GACxB,GAAa,SAATA,EAGA,EAAKC,MAAQT,EACb,EAAKU,WAAa,aAClB,EAAKJ,WAAa,CAACC,GAAI,WAAYC,KAAM,YACtC,CAGH,GADA,EAAKC,MAASS,IAAgBC,uBAAuBX,GAA4CY,eAAiB,GAC9G,EAAKX,MAAMY,OAAS,EAAG,CAEvB,IADA,IAAIC,GAAmB,EACdC,EAAI,EAAGA,EAAI,EAAKd,MAAMY,OAAQE,IACnC,GAAI,EAAKd,MAAMc,GAAGnB,MAAQ,EAAKM,WAAY,CACvCY,GAAmB,EACnB,KACH,CAEDA,IACA,EAAKZ,WAAa,EAAKD,MAAM,GAAGL,IACvC,CACD,EAAKE,WAAa,CAACC,KAAIC,QAEnB,EAAKG,UACL,EAAKA,SAAU,EACfa,YAAW,WACPC,aAAY,kBAAM,EAAKd,SAAU,CAArB,GACf,GAAE,GAEV,CACJ,EAjEGe,YAAeC,KAAM,CACjBlB,MAAOmB,IACPlB,WAAYkB,IACZjB,QAASiB,IACThB,cAAeiB,IACfb,kBAAmBa,IACnBZ,aAAcY,KAErB,KA6DUxB,K,8IC9ETyB,E,4MACFC,MAAQ,CACJC,WAAW,G,EAGfC,gBAAkB,kBAAM,EAAKC,SAAS,CAACF,WAAW,GAAhC,E,EAElBG,YAAc,kBAAM,EAAKD,SAAS,CAACF,WAAW,GAAhC,E,EAEdI,YAAc,SAACC,GACX,GAAKA,EAAL,CACA,IAAoB9B,EAAOF,IAApBC,WAAaC,GAEd+B,EADkBC,IAAjBC,cACwBjC,EAAK,IACpC+B,GAAYA,EAASG,YAAYJ,EAJf,CAKrB,E,4CAED,WACI,OACI,qCACI,sBAAKK,UAAW,kBAAhB,UACI,qBAAKA,UAAW,kBAAhB,SACI,cAAC,IAAD,CAAUC,QAAShB,KAAKM,gBAAiBW,MAAO,CAACC,MAAO,QAAxD,gDAEJ,uBACA,cAAC,IAAD,CAAWC,WAAYnB,KAAKS,iBAEhC,cAAC,IAAD,CAAQW,QAASpB,KAAKQ,YAAaa,MAAO,2BAAQrC,QAASgB,KAAKI,MAAMC,UAAWa,MAAO,IAAxF,SACI,cAAC,IAAD,QAIf,K,GAhCqBI,aAmCXnB,W","file":"static/js/12.96a0bfed.chunk.js","sourcesContent":["import {action, makeObservable, observable, runInAction} from \"mobx\";\r\nimport {MenuInfo} from \"./MenuType\";\r\nimport designerStarter from \"../DesignerStarter\";\r\nimport {AbstractCustomComponentDefinition} from \"../../framework/core/AbstractCustomComponentDefinition\";\r\nimport {ActiveElem} from \"../DesignerType\";\r\nimport {PictureFilled} from \"@ant-design/icons\";\r\n\r\n\r\nexport const bgMenu: MenuInfo[] = [{\r\n    icon: PictureFilled,\r\n    name: '背景',\r\n    key: 'background',\r\n}];\r\n\r\n/**\r\n * 设计器。右侧组件配置状态管理类\r\n */\r\nclass RightStore {\r\n    constructor() {\r\n        makeObservable(this, {\r\n            menus: observable,\r\n            activeMenu: observable,\r\n            visible: observable,\r\n            setActiveMenu: action,\r\n            setContentVisible: action,\r\n            activeConfig: action,\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 当前选中的组件\r\n     */\r\n    activeElem: ActiveElem = {id: '80cc666f', type: 'LcBg'};\r\n    /**\r\n     * 当前选中组件的操作菜单列表\r\n     */\r\n    menus: Array<MenuInfo> = bgMenu;\r\n    /**\r\n     * 当前选中组件的操作菜单列表中处于激活状态的菜单\r\n     */\r\n    activeMenu: string = 'background';\r\n    /**\r\n     * 右侧组件配置区域是否可见\r\n     */\r\n    visible: boolean = false;\r\n\r\n    setActiveMenu = (menu: string, newMenus?: string[]) => {\r\n        if (newMenus && newMenus.includes(this.activeMenu))\r\n            return;\r\n        this.activeMenu = menu;\r\n    }\r\n\r\n    setContentVisible = (visible: boolean) => this.visible = visible;\r\n\r\n    activeConfig = (id: string, type: string) => {\r\n        if (type === 'LcBg') {\r\n            //激活背景设置\r\n            //更新菜单列表\r\n            this.menus = bgMenu;\r\n            this.activeMenu = 'background';\r\n            this.activeElem = {id: '80cc666f', type: 'LcBg'};\r\n        } else {\r\n            //更新菜单列表\r\n            this.menus = (designerStarter.customComponentInfoMap[type] as AbstractCustomComponentDefinition).getMenuList() || [];\r\n            if (this.menus.length > 0) {\r\n                let setNewActiveMenu = true;\r\n                for (let i = 0; i < this.menus.length; i++) {\r\n                    if (this.menus[i].key === this.activeMenu) {\r\n                        setNewActiveMenu = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (setNewActiveMenu)\r\n                    this.activeMenu = this.menus[0].key;\r\n            }\r\n            this.activeElem = {id, type};\r\n            //重新挂载配置面板\r\n            if (this.visible) {\r\n                this.visible = false;\r\n                setTimeout(() => {\r\n                    runInAction(() => this.visible = true);\r\n                }, 0);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst rightStore = new RightStore();\r\nexport default rightStore;","import React, {Component} from 'react';\r\nimport Dialog from \"../../../lib/lc-dialog/Dialog\";\r\nimport ThemeEditor from \"./theme-editor/ThemeEditor\";\r\nimport LcButton from \"../../../lib/lc-button/LcButton\";\r\nimport ThemeList from \"./theme-list/ThemeList\";\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport {ThemeItemType} from \"../../../designer/DesignerType\";\r\nimport rightStore from \"../../../designer/right/RightStore\";\r\nimport designerStore from \"../../../designer/store/DesignerStore\";\r\n\r\nclass ThemeConfig extends Component<ConfigType> {\r\n    state = {\r\n        editTheme: false,\r\n    }\r\n\r\n    openThemeEditor = () => this.setState({editTheme: true});\r\n\r\n    closeEditor = () => this.setState({editTheme: false});\r\n\r\n    themeChange = (theme: ThemeItemType) => {\r\n        if (!theme) return;\r\n        const {activeElem: {id}} = rightStore;\r\n        const {compInstances} = designerStore;\r\n        const instance = compInstances[id + ''];\r\n        instance && instance.updateTheme(theme);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={'lc-theme-config'}>\r\n                    <div className={'lc-theme-custom'}>\r\n                        <LcButton onClick={this.openThemeEditor} style={{width: '100%'}}>+ 自定义主题</LcButton>\r\n                    </div>\r\n                    <br/>\r\n                    <ThemeList onSelected={this.themeChange}/>\r\n                </div>\r\n                <Dialog onClose={this.closeEditor} title={'编辑主题'} visible={this.state.editTheme} width={860}>\r\n                    <ThemeEditor/>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemeConfig;"],"sourceRoot":""}