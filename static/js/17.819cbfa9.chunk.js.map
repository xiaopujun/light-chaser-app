{"version":3,"sources":["comps/lc/background/DesignerBackground.tsx","framework/core/ComponentContainer.tsx","designer/view/DesignerView.tsx"],"names":["DesignerBackground","props","onClick","e","getBgConfigProps","bgConfig","state","config","width","height","bgMode","bgColor","bgImg","bgImgSize","length","bgImgPosition","bgImgPos","bgConfigProps","BackgroundMode","NONE","PICTURE","bgImgUrl","bgImgRepeat","single","radialGradient","linearGradient","bgColorMode","BackgroundColorMode","SINGLE","color","LINEAR_GRADIENT","compInstances","designerStore","elemConfigs","componentDefine","EditorDesignerLoader","getInstance","customComponentInfoMap","getInitConfig","AbstractBackgroundImpl","background","className","id","onDoubleClick","this","style","children","Component","ComponentContainer","ref","mode","parseUrlParams","action","layout","historyRecordOperateProxy","doAdd","fallback","type","locked","hide","transform","position","display","pointerEvents","React","PureComponent","DesignerView","generateElement","layoutConfigs","Object","values","sort","a","b","order","map","item","load","loaded","observer"],"mappings":"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","file":"static/js/17.819cbfa9.chunk.js","sourcesContent":["import React, {Component, MouseEvent} from 'react';\r\nimport {BackgroundColorMode, BackgroundMode} from \"../../../designer/DesignerType\";\r\nimport AbstractBackgroundImpl, {AbstractBackgroundImplProps, BackgroundConfigType} from \"./AbstractBackgroundImpl\";\r\nimport designerStore from \"../../../designer/store/DesignerStore\";\r\nimport EditorDesignerLoader from \"../../../designer/loader/EditorDesignerLoader\";\r\n\r\ninterface LcDesignerBackgroundProps {\r\n    onClick?: (e: MouseEvent<HTMLDivElement>) => void;\r\n    config?: BackgroundConfigType;\r\n}\r\n\r\n/**\r\n * 设计器画布背景\r\n */\r\nclass DesignerBackground extends Component<LcDesignerBackgroundProps> {\r\n\r\n    constructor(props: LcDesignerBackgroundProps) {\r\n        super(props);\r\n        const {compInstances, elemConfigs} = designerStore;\r\n        // const {customComponentInfoMap} = designerStarter;\r\n        let config: AbstractBackgroundImplProps | null = null;\r\n        if ('80cc666f' in elemConfigs!)\r\n            config = elemConfigs['80cc666f'];\r\n        else {\r\n            const componentDefine = EditorDesignerLoader.getInstance().customComponentInfoMap['LcBg'];\r\n            if (componentDefine)\r\n                config = componentDefine.getInitConfig();\r\n        }\r\n        compInstances['80cc666f'] = new AbstractBackgroundImpl(this, config!);\r\n        this.state = {config: config?.background}\r\n        // delete elemConfigs!['80cc666f'];\r\n    }\r\n\r\n    onClick = (e: MouseEvent<HTMLDivElement>) => {\r\n        const {onClick} = this.props;\r\n        onClick && onClick(e);\r\n    }\r\n\r\n    getBgConfigProps = () => {\r\n        // const bgConfig: BackgroundConfigType = this.props.config!!;\r\n        const {config: bgConfig} = this.state as any;\r\n        const {width, height, bgMode, bgColor, bgImg} = bgConfig;\r\n        let bgImgSize = '100% 100%';\r\n        if (bgImg.bgImgSize && bgImg.bgImgSize.length === 2)\r\n            bgImgSize = `${bgConfig.bgImg.bgImgSize[0]}px ${bgImg.bgImgSize[1]}px`;\r\n        let bgImgPosition = '0 0';\r\n        if (bgImg.bgImgPos && bgImg.bgImgPos.length === 2)\r\n            bgImgPosition = `${bgImg.bgImgPos[0]}px ${bgImg.bgImgPos[1]}px`;\r\n        if (bgConfig) {\r\n            let bgConfigProps: any = {height: height, width: width}\r\n            if (bgMode + '' === BackgroundMode.NONE)\r\n                bgConfigProps['backgroundColor'] = '#000000';\r\n            else if (bgMode + '' === BackgroundMode.PICTURE) {\r\n                if (bgImg.bgImgUrl && bgImg.bgImgUrl !== '') {\r\n                    bgConfigProps['backgroundImage'] = `url(${bgImg.bgImgUrl})`;\r\n                    bgConfigProps['backgroundSize'] = bgImgSize;\r\n                    bgConfigProps['backgroundPosition'] = bgImgPosition;\r\n                    bgConfigProps['backgroundRepeat'] = bgImg?.bgImgRepeat;\r\n                } else\r\n                    bgConfigProps['backgroundColor'] = '#000000';\r\n            } else {\r\n                const {single, radialGradient, linearGradient, bgColorMode} = bgColor;\r\n                if (bgConfig?.bgColor.bgColorMode + '' === BackgroundColorMode.SINGLE)\r\n                    bgConfigProps['backgroundColor'] = single.color;\r\n                else if (bgColorMode === BackgroundColorMode.LINEAR_GRADIENT)\r\n                    bgConfigProps['background'] = linearGradient.color;\r\n                else\r\n                    bgConfigProps['background'] = radialGradient.color;\r\n            }\r\n            return bgConfigProps;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'lc-background'}\r\n                 id={'80cc666f'}\r\n                 data-type={'LcBg'}\r\n                 onDoubleClick={this.onClick}\r\n                 style={this.getBgConfigProps()}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DesignerBackground;","import React, {Suspense} from \"react\";\r\nimport {MovableItemType} from \"../../lib/lc-movable/types\";\r\nimport Loading from \"../../lib/loading/Loading\";\r\nimport {parseUrlParams} from \"../../utils/URLUtil\";\r\nimport historyRecordOperateProxy from \"../../designer/operate-provider/undo-redo/HistoryRecordOperateProxy\";\r\n\r\nexport interface ComponentContainerProps {\r\n    layout: MovableItemType;\r\n}\r\n\r\nclass ComponentContainer extends React.PureComponent<ComponentContainerProps> {\r\n\r\n    private ref: HTMLDivElement | null = null;\r\n\r\n    private mode: string = parseUrlParams()?.action || 'edit';\r\n\r\n    componentDidMount(): void {\r\n        //通过ref创建组件，并将组件实例方法Map中。后续通过Map匹配到具体实例，\r\n        //调用实例的对象方法进行组件的更新操作\r\n        const {layout} = this.props;\r\n        historyRecordOperateProxy.doAdd(this.ref, layout);\r\n    }\r\n\r\n    render() {\r\n        const {layout} = this.props;\r\n        return (\r\n            <Suspense fallback={<Loading/>}>\r\n                <div\r\n                    id={layout.id}\r\n                    data-type={layout.type}\r\n                    data-locked={layout.locked}\r\n                    data-hide={layout.hide}\r\n                    key={layout.id + ''}\r\n                    style={{\r\n                        width: layout.width,\r\n                        height: layout.height,\r\n                        transform: `translate(${layout.position![0]}px, ${layout.position![1]}px)`,\r\n                        position: 'absolute',\r\n                        display: layout.hide ? 'none' : 'block',\r\n                    }} className={'lc-comp-item'}>\r\n                    <div ref={(ref) => this.ref = ref} style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        //todo 要优化\r\n                        pointerEvents: `${this.mode === 'view' ? 'auto' : 'none'}`,\r\n                        position: 'relative'\r\n                    }}/>\r\n                </div>\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ComponentContainer;","import React, {Component} from 'react';\r\nimport DesignerBackground from \"../../comps/lc/background/DesignerBackground\";\r\nimport './DesignerView.less';\r\nimport {MovableItemType} from \"../../lib/lc-movable/types\";\r\nimport Loading from \"../../lib/loading/Loading\";\r\nimport designerStore from \"../store/DesignerStore\";\r\nimport ComponentContainer from \"../../framework/core/ComponentContainer\";\r\nimport {observer} from \"mobx-react\";\r\nimport EditorDesignerLoader from \"../loader/EditorDesignerLoader\";\r\n\r\nclass DesignerView extends Component {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        EditorDesignerLoader.getInstance().load();\r\n    }\r\n\r\n    generateElement = () => {\r\n        let {layoutConfigs} = designerStore!;\r\n        const sortLayout = Object.values(layoutConfigs).sort((a: MovableItemType, b: MovableItemType) => a.order! - b.order!);\r\n        return sortLayout.map((item: MovableItemType) => {\r\n            return <ComponentContainer layout={item} key={item.id}/>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {loaded, elemConfigs} = designerStore!;\r\n        if (!loaded)\r\n            return <Loading/>;\r\n        return (\r\n            <DesignerBackground config={elemConfigs!['80cc666f']['background'] || {}}>\r\n                {this.generateElement()}\r\n            </DesignerBackground>\r\n        );\r\n    }\r\n}\r\n\r\nexport default observer(DesignerView);"],"sourceRoot":""}