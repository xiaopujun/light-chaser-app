{"version":3,"sources":["comps/antd-common/area/AntdAreaCommonConfig.tsx"],"names":["AntdAreaCommonStyleConfig","legendChange","legend","props","instance","update","style","areaCoordinateSysChange","config","areaGraphicsChange","this","getConfig","AntdCommonAreaGraphics","onChange","Component","title","defaultValue","point","size","type","min","event","parseInt","target","value","width","fill","height","borderRadius","showText","options","label","shape","smooth","line","lineWidth","bodyStyle","cardStyle","itemStyle","contentStyle","data","mode","angle","areaStyle","color","undefined","startsWith","split","buildColorModeData"],"mappings":"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","file":"static/js/12.5f04cd5a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport {AntdCartesianCoordinateSys, AntdLegend} from \"../config/AntdFragment\";\r\nimport {Area, AreaOptions, ShapeStyle} from \"@antv/g2plot\";\r\nimport {Legend} from \"@antv/g2plot/lib/types/legend\";\r\nimport AbstractComponent from \"../../../framework/core/AbstractComponent\";\r\nimport {AntdAreaProps} from \"./AntdCommonArea\";\r\nimport {WritableAreaOptions} from \"../types\";\r\nimport ColorMode, {ColorModeValue} from \"../../../lib/lc-color-mode/ColorMode\";\r\nimport {ShapeAttrs} from \"@antv/g-base\";\r\nimport Accordion from \"../../../lib/lc-accordion/Accordion\";\r\nimport ConfigItem from \"../../../lib/lc-config-item/ConfigItem\";\r\nimport LcSwitch from \"../../../lib/lc-switch/LcSwitch\";\r\nimport ConfigCard from \"../../../lib/lc-config-card/ConfigCard\";\r\nimport UnderLineInput from \"../../../lib/lc-input/UnderLineInput\";\r\nimport {MappingOptions} from \"@antv/g2plot/lib/adaptor/geometries/base\";\r\nimport CfgItemBorder from \"../../../lib/lc-config-item/CfgItemBorder\";\r\nimport BaseColorPicker from \"../../../lib/lc-color-picker/BaseColorPicker\";\r\nimport Select from \"../../../lib/lc-select/Select\";\r\n\r\nclass AntdAreaCommonStyleConfig extends Component<ConfigType> {\r\n\r\n    legendChange = (legend: Legend) => {\r\n        const instance: AbstractComponent<Area, AntdAreaProps> = this.props.instance;\r\n        instance.update({style: {legend}});\r\n    }\r\n\r\n    areaCoordinateSysChange = (config: AreaOptions) => {\r\n        const instance: AbstractComponent<Area, AntdAreaProps> = this.props.instance;\r\n        instance.update({style: config});\r\n    }\r\n\r\n    areaGraphicsChange = (config: AreaOptions) => {\r\n        const instance: AbstractComponent<Area, AntdAreaProps> = this.props.instance;\r\n        instance.update({style: config});\r\n    }\r\n\r\n    render() {\r\n        const {instance} = this.props;\r\n        const config: AreaOptions = instance.getConfig().style;\r\n        return (\r\n            <>\r\n                <AntdCommonAreaGraphics config={config} onChange={this.areaGraphicsChange}/>\r\n                <AntdLegend onChange={this.legendChange} config={config.legend}/>\r\n                <AntdCartesianCoordinateSys onChange={this.areaCoordinateSysChange} config={config}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport {AntdAreaCommonStyleConfig};\r\n\r\n\r\nexport interface AntdCommonAreaGraphicsProps {\r\n    config?: WritableAreaOptions;\r\n\r\n    onChange(config: WritableAreaOptions): void;\r\n}\r\n\r\nexport const AntdCommonAreaGraphics: React.FC<AntdCommonAreaGraphicsProps> = ({config, onChange}) => {\r\n\r\n    const areaColorChange = (data: ColorModeValue) => {\r\n        const {mode, value, angle = 0} = data;\r\n        switch (mode) {\r\n            case 'single':\r\n                onChange({areaStyle: {fill: value as string}});\r\n                break;\r\n            case 'multi':\r\n                onChange({color: value as string[], areaStyle: {fill: undefined}});\r\n                break;\r\n            case 'gradient':\r\n                onChange({areaStyle: {fill: `l(${angle}) 0:${value[0]} 1:${value[1]}`}});\r\n                break;\r\n        }\r\n    }\r\n\r\n    const buildColorModeData = (): ColorModeValue => {\r\n        let mode, value: string | string[], angle = 0;\r\n        if ((config?.areaStyle as ShapeAttrs)?.fill) {\r\n            const fill = (config?.areaStyle as ShapeAttrs).fill as string;\r\n            if (fill.startsWith('l')) {\r\n                mode = 'gradient';\r\n                value = [fill.split(':')[1].split(' ')[0], fill.split(':')[2].split(' ')[0]];\r\n                angle = parseInt(fill.split('(')[1].split(')')[0]);\r\n            } else {\r\n                mode = 'single';\r\n                value = fill;\r\n            }\r\n        } else {\r\n            mode = 'multi';\r\n            value = config?.color as string[] || ['#fff'];\r\n        }\r\n        return {mode, value, angle};\r\n    }\r\n\r\n    return (\r\n        <Accordion title={'图形'}>\r\n            <ConfigCard title={'数据点'}>\r\n                <ConfigItem title={'尺寸'}>\r\n                    <UnderLineInput defaultValue={(config?.point as MappingOptions)?.size as number || 0}\r\n                                    type={'number'} min={0}\r\n                                    onChange={(event) =>\r\n                                        onChange({point: {size: parseInt(event.target.value)}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'}>\r\n                    <CfgItemBorder width={'100%'}>\r\n                        <BaseColorPicker\r\n                            defaultValue={(config?.point?.style as ShapeStyle)?.fill || '#fff'}\r\n                            onChange={(value) => onChange({point: {style: {fill: value}}})}\r\n                            style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n                <ConfigItem title={'形状'}>\r\n                    <Select options={[\r\n                        {value: 'circle', label: '圈形'},\r\n                        {value: 'square', label: '方形'},\r\n                        {value: 'bowtie', label: '领结'},\r\n                        {value: 'diamond', label: '钻石'},\r\n                        {value: 'hexagon', label: '六角形'},\r\n                        {value: 'triangle', label: '三角形'}]}\r\n                            defaultValue={config?.point?.shape as string || 'circle'}\r\n                            onChange={(value) => onChange({point: {shape: value}})}/>\r\n                </ConfigItem>\r\n            </ConfigCard>\r\n            <ConfigCard title={'数据线'}>\r\n                <ConfigItem title={'平滑'}>\r\n                    <LcSwitch defaultValue={config?.smooth}\r\n                              onChange={(value) => onChange({smooth: value})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'线宽'}>\r\n                    <UnderLineInput defaultValue={(config?.line?.style as ShapeStyle)?.lineWidth as number || 1}\r\n                                    type={'number'} min={0}\r\n                                    onChange={(event) =>\r\n                                        onChange({line: {style: {lineWidth: parseInt(event.target.value)}}})}/>\r\n                </ConfigItem>\r\n            </ConfigCard>\r\n            <ConfigCard title={'数据面'} bodyStyle={{width: '100%'}} cardStyle={{width: '100%'}}>\r\n                <ConfigItem title={'颜色'} itemStyle={{width: '100%'}} contentStyle={{width: 'calc(100% - 38px)'}}>\r\n                    <ColorMode onChange={areaColorChange} data={buildColorModeData()}/>\r\n                </ConfigItem>\r\n            </ConfigCard>\r\n        </Accordion>\r\n    )\r\n}"],"sourceRoot":""}