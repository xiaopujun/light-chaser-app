{"version":3,"sources":["comps/lc/background/DesignerBackground.tsx","framework/core/ComponentContainer.tsx","designer/LoadDesigner.ts","designer/view/DesignerView.tsx"],"names":["DesignerBackground","props","onClick","e","getBgConfigProps","bgConfig","state","config","width","height","bgMode","bgColor","bgImg","bgImgSize","length","bgImgPosition","bgImgPos","bgConfigProps","BackgroundMode","NONE","PICTURE","bgImgUrl","bgImgRepeat","single","radialGradient","linearGradient","bgColorMode","BackgroundColorMode","SINGLE","color","LINEAR_GRADIENT","compInstances","designerStore","elemConfigs","customComponentInfoMap","designerStarter","componentDefine","getInitConfig","AbstractBackgroundImpl","background","className","id","onDoubleClick","this","style","children","Component","ComponentContainer","ref","mode","parseUrlParams","action","layout","type","AbsCompImpl","getComponent","initConfig","info","create","then","instance","fallback","locked","hide","transform","position","display","pointerEvents","React","PureComponent","doScan","loadDesigner","loadProjectData","includes","initExistProject","Error","initNewProject","urlParams","name","doInit","setLoaded","canvasConfig","parseInt","projectConfig","abstractOperatorMap","saveType","SaveType","LOCAL","getProject","store","layoutConfigs","statisticInfo","themeConfig","theme","extendParams","setMinLevel","eventOperateStore","setMaxLevel","minLevel","maxLevel","DesignerView","generateElement","Object","values","sort","a","b","order","map","item","loaded","observer"],"mappings":"4MAcMA,E,kDAEF,WAAYC,GAAmC,IAAD,yBAC1C,cAAMA,IAgBVC,QAAU,SAACC,GACP,IAAOD,EAAW,EAAKD,MAAhBC,QACPA,GAAWA,EAAQC,EACtB,EApB6C,EAsB9CC,iBAAmB,WAEf,IAAeC,EAAY,EAAKC,MAAzBC,OACAC,EAAyCH,EAAzCG,MAAOC,EAAkCJ,EAAlCI,OAAQC,EAA0BL,EAA1BK,OAAQC,EAAkBN,EAAlBM,QAASC,EAASP,EAATO,MACnCC,EAAY,YACZD,EAAMC,WAAwC,IAA3BD,EAAMC,UAAUC,SACnCD,EAAS,UAAMR,EAASO,MAAMC,UAAU,GAA/B,cAAuCD,EAAMC,UAAU,GAAvD,OACb,IAAIE,EAAgB,MAGpB,GAFIH,EAAMI,UAAsC,IAA1BJ,EAAMI,SAASF,SACjCC,EAAa,UAAMH,EAAMI,SAAS,GAArB,cAA6BJ,EAAMI,SAAS,GAA5C,OACbX,EAAU,CACV,IAAIY,EAAqB,CAACR,OAAQA,EAAQD,MAAOA,GACjD,GAAIE,EAAS,KAAOQ,IAAeC,KAC/BF,EAAa,gBAAsB,eAClC,GAAIP,EAAS,KAAOQ,IAAeE,QAChCR,EAAMS,UAA+B,KAAnBT,EAAMS,UACxBJ,EAAa,gBAAb,cAA0CL,EAAMS,SAAhD,KACAJ,EAAa,eAAqBJ,EAClCI,EAAa,mBAAyBF,EACtCE,EAAa,iBAAb,OAAoCL,QAApC,IAAoCA,OAApC,EAAoCA,EAAOU,aAE3CL,EAAa,gBAAsB,cACpC,CACH,IAAOM,EAAuDZ,EAAvDY,OAAQC,EAA+Cb,EAA/Ca,eAAgBC,EAA+Bd,EAA/Bc,eAAgBC,EAAef,EAAfe,aACnC,OAARrB,QAAQ,IAARA,OAAA,EAAAA,EAAUM,QAAQe,aAAc,KAAOC,IAAoBC,OAC3DX,EAAa,gBAAsBM,EAAOM,MACrCH,IAAgBC,IAAoBG,gBACzCb,EAAa,WAAiBQ,EAAeI,MAE7CZ,EAAa,WAAiBO,EAAeK,KACpD,CACD,OAAOZ,CACV,CACJ,EArDG,IAAOc,EAA8BC,IAA9BD,cAAeE,EAAeD,IAAfC,YACfC,EAA0BC,IAA1BD,uBACH3B,EAA6C,KACjD,GAAI,aAAc0B,EACd1B,EAAS0B,EAAY,gBACpB,CACD,IAAMG,EAAkBF,EAAsB,KAC1CE,IACA7B,EAAS6B,EAAgBC,gBAChC,CAXyC,OAY1CN,EAAc,YAAc,IAAIO,UAAJ,eAAiC/B,GAC7D,EAAKD,MAAQ,CAACC,OAAM,UAAEA,SAAF,aAAE,EAAQgC,mBACvBN,EAAa,YAdsB,CAe7C,C,0CA0CD,WACI,OACI,qBAAKO,UAAW,gBACXC,GAAI,WACJ,YAAW,OACXC,cAAeC,KAAKzC,QACpB0C,MAAOD,KAAKvC,mBAJjB,SAKKuC,KAAK1C,MAAM4C,UAGvB,K,GArE4BC,aAwElB9C,K,4HC1ET+C,E,8MAEMC,IAA6B,K,EAE7BC,MAA6B,QAAd,EAAAC,qBAAA,eAAkBC,SAAU,O,uDAEnD,WAGI,IAAOC,EAAUT,KAAK1C,MAAfmD,OACAlB,EAA0BC,IAA1BD,uBACAD,EAAeD,IAAfC,YACHG,EAAqDF,EAAuBkB,EAAQC,KAAO,IAC/F,GAAIjB,EAAiB,CACjB,IAAMkB,EAAclB,EAAgBmB,eACpC,GAAID,EAAa,CACb,IAAM/C,EAAS6C,EAAOX,MAAOR,EAAeA,EAAamB,EAAOX,IAAQ,WACpE,IAAIe,EAAapB,EAAgBC,gBAEjC,OADAmB,EAAWC,KAAKhB,GAAKW,EAAOX,GACrBe,CACV,CAJuE,IAKxE,IAAIF,GAAeI,OAAOf,KAAKK,IAAMzC,GAAQoD,MAAK,SAACC,GACvB5B,IAAjBD,cACOqB,EAAOX,GAAK,IAAMmB,CACnC,WACM3B,EAAamB,EAAOX,GAC9B,CACJ,CACJ,G,oBAED,WAAU,IAAD,OACEW,EAAUT,KAAK1C,MAAfmD,OACP,OACI,cAAC,WAAD,CAAUS,SAAU,cAAC,IAAD,IAApB,SACI,qBACIpB,GAAIW,EAAOX,GACX,YAAWW,EAAOC,KAClB,cAAaD,EAAOU,OACpB,YAAWV,EAAOW,KAElBnB,MAAO,CACHpC,MAAO4C,EAAO5C,MACdC,OAAQ2C,EAAO3C,OACfuD,UAAU,aAAD,OAAeZ,EAAOa,SAAU,GAAhC,eAAyCb,EAAOa,SAAU,GAA1D,OACTA,SAAU,WACVC,QAASd,EAAOW,KAAO,OAAS,SACjCvB,UAAW,eAZlB,SAaI,qBAAKQ,IAAK,SAACA,GAAD,OAAS,EAAKA,IAAMA,CAApB,EAAyBJ,MAAO,CACtCpC,MAAO,OACPC,OAAQ,OAER0D,cAAc,GAAD,OAAmB,SAAdxB,KAAKM,KAAkB,OAAS,QAClDgB,SAAU,eAbTb,EAAOX,GAAK,KAkBhC,K,GAzD4B2B,IAAMC,eA6DxBtB,K,mCCzEf,+EAMOuB,EAAUnC,IAAVmC,OAEMC,EAAe,WAExBD,IAEAE,GACH,EAKKA,EAAkB,WACpB,IACOrB,EADSD,cACTC,OACP,GAAI,CAAC,OAAQ,QAAQsB,SAAStB,GAC1BuB,QACC,IAAe,WAAXvB,EAGL,MAAM,IAAIwB,MAAM,mBAFhBC,GAEA,CACP,EAKKA,EAAiB,WACnB,IAAIC,EAAY3B,cACT1C,EAAuBqE,EAAvBrE,MAAOC,EAAgBoE,EAAhBpE,OAAQqE,EAAQD,EAARC,KACfC,EAAqB/C,IAArB+C,OAAQC,EAAahD,IAAbgD,UACfD,EAAO,CACHE,aAAc,CACVzE,MAAO0E,SAAS1E,GAChBC,OAAQyE,SAASzE,IAErB0E,cAAe,CACXL,KAAMA,KAGdE,GAAU,EACb,EAKKN,EAAmB,WACrB,IAAIG,EAAY3B,cACT6B,EAAqB/C,IAArB+C,OAAQC,EAAahD,IAAbgD,UACRI,EAAuBjD,IAAvBiD,oBACP,EAAqDpD,IAA9CmD,cAAgBE,SACvBD,OADA,MAAkCE,IAASC,MAA3C,GAC8BC,WAAWX,EAAUpC,IAAIkB,MAAK,SAAC8B,GACzD,GAAIA,EAAO,CACPV,EAAO,CACHtC,GAAIgD,EAAMhD,GACVwC,aAAcQ,EAAMR,aACpBE,cAAeM,EAAMN,cACrBlD,YAAawD,EAAMxD,YACnByD,cAAeD,EAAMC,cACrBC,cAAeF,EAAME,cACrBC,YAAaH,EAAMI,MACnBC,aAAcL,EAAMK,eAGxB,IAAOC,EAA4BC,IAA5BD,YAAaE,EAAeD,IAAfC,YACpBF,EAAYN,EAAMC,cAAcQ,UAAY,GAC5CD,EAAYR,EAAMC,cAAcS,UAAY,EAC/C,CACDnB,GAAU,EACb,GACJ,C,2KCjEKoB,E,4MAOFC,gBAAkB,WACd,IAAKX,EAAiB1D,IAAjB0D,cAEL,OADmBY,OAAOC,OAAOb,GAAec,MAAK,SAACC,EAAoBC,GAArB,OAA4CD,EAAEE,MAASD,EAAEC,KAAzD,IACnCC,KAAI,SAACC,GACnB,OAAO,cAAC,IAAD,CAAoBzD,OAAQyD,GAAWA,EAAKpE,GACtD,GACJ,E,uDAXD,WAEI8B,aACH,G,oBAUD,WACI,MAA4BvC,IAAvB8E,EAAL,EAAKA,OAAQ7E,EAAb,EAAaA,YACb,OACI,mCACK6E,EAAS,cAAC,IAAD,CAAoBvG,OAAQ0B,EAAa,YAAb,YAA0C,CAAC,EAAvE,SACLU,KAAK0D,oBACc,cAAC,IAAD,KAGnC,K,GAxBsBvD,aA2BZiE,sBAASX,E","file":"static/js/9.38433b1a.chunk.js","sourcesContent":["import React, {Component, MouseEvent} from 'react';\r\nimport {BackgroundColorMode, BackgroundMode} from \"../../../designer/DesignerType\";\r\nimport AbstractBackgroundImpl, {AbstractBackgroundImplProps, BackgroundConfigType} from \"./AbstractBackgroundImpl\";\r\nimport designerStore from \"../../../designer/store/DesignerStore\";\r\nimport designerStarter from \"../../../designer/DesignerStarter\";\r\n\r\ninterface LcDesignerBackgroundProps {\r\n    onClick?: (e: MouseEvent<HTMLDivElement>) => void;\r\n    config?: BackgroundConfigType;\r\n}\r\n\r\n/**\r\n * 设计器画布背景\r\n */\r\nclass DesignerBackground extends Component<LcDesignerBackgroundProps> {\r\n\r\n    constructor(props: LcDesignerBackgroundProps) {\r\n        super(props);\r\n        const {compInstances, elemConfigs} = designerStore;\r\n        const {customComponentInfoMap} = designerStarter;\r\n        let config: AbstractBackgroundImplProps | null = null;\r\n        if ('80cc666f' in elemConfigs!)\r\n            config = elemConfigs['80cc666f'];\r\n        else {\r\n            const componentDefine = customComponentInfoMap['LcBg'];\r\n            if (componentDefine)\r\n                config = componentDefine.getInitConfig();\r\n        }\r\n        compInstances['80cc666f'] = new AbstractBackgroundImpl(this, config!);\r\n        this.state = {config: config?.background}\r\n        delete elemConfigs!['80cc666f'];\r\n    }\r\n\r\n    onClick = (e: MouseEvent<HTMLDivElement>) => {\r\n        const {onClick} = this.props;\r\n        onClick && onClick(e);\r\n    }\r\n\r\n    getBgConfigProps = () => {\r\n        // const bgConfig: BackgroundConfigType = this.props.config!!;\r\n        const {config: bgConfig} = this.state as any;\r\n        const {width, height, bgMode, bgColor, bgImg} = bgConfig;\r\n        let bgImgSize = '100% 100%';\r\n        if (bgImg.bgImgSize && bgImg.bgImgSize.length === 2)\r\n            bgImgSize = `${bgConfig.bgImg.bgImgSize[0]}px ${bgImg.bgImgSize[1]}px`;\r\n        let bgImgPosition = '0 0';\r\n        if (bgImg.bgImgPos && bgImg.bgImgPos.length === 2)\r\n            bgImgPosition = `${bgImg.bgImgPos[0]}px ${bgImg.bgImgPos[1]}px`;\r\n        if (bgConfig) {\r\n            let bgConfigProps: any = {height: height, width: width}\r\n            if (bgMode + '' === BackgroundMode.NONE)\r\n                bgConfigProps['backgroundColor'] = '#000000';\r\n            else if (bgMode + '' === BackgroundMode.PICTURE) {\r\n                if (bgImg.bgImgUrl && bgImg.bgImgUrl !== '') {\r\n                    bgConfigProps['backgroundImage'] = `url(${bgImg.bgImgUrl})`;\r\n                    bgConfigProps['backgroundSize'] = bgImgSize;\r\n                    bgConfigProps['backgroundPosition'] = bgImgPosition;\r\n                    bgConfigProps['backgroundRepeat'] = bgImg?.bgImgRepeat;\r\n                } else\r\n                    bgConfigProps['backgroundColor'] = '#000000';\r\n            } else {\r\n                const {single, radialGradient, linearGradient, bgColorMode} = bgColor;\r\n                if (bgConfig?.bgColor.bgColorMode + '' === BackgroundColorMode.SINGLE)\r\n                    bgConfigProps['backgroundColor'] = single.color;\r\n                else if (bgColorMode === BackgroundColorMode.LINEAR_GRADIENT)\r\n                    bgConfigProps['background'] = linearGradient.color;\r\n                else\r\n                    bgConfigProps['background'] = radialGradient.color;\r\n            }\r\n            return bgConfigProps;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'lc-background'}\r\n                 id={'80cc666f'}\r\n                 data-type={'LcBg'}\r\n                 onDoubleClick={this.onClick}\r\n                 style={this.getBgConfigProps()}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DesignerBackground;","import React, {Suspense} from \"react\";\r\nimport designerStarter from \"../../designer/DesignerStarter\";\r\nimport {MovableItemType} from \"../../lib/lc-movable/types\";\r\nimport Loading from \"../../lib/loading/Loading\";\r\nimport designerStore from \"../../designer/store/DesignerStore\";\r\nimport {AbstractCustomComponentDefinition} from \"./AbstractCustomComponentDefinition\";\r\nimport {parseUrlParams} from \"../../utils/URLUtil\";\r\n\r\nexport interface ComponentContainerProps {\r\n    layout: MovableItemType;\r\n}\r\n\r\nclass ComponentContainer extends React.PureComponent<ComponentContainerProps> {\r\n\r\n    private ref: HTMLDivElement | null = null;\r\n\r\n    private mode: string = parseUrlParams()?.action || 'edit';\r\n\r\n    componentDidMount(): void {\r\n        //通过ref创建组件，并将组件实例方法Map中。后续通过Map匹配到具体实例，\r\n        //调用实例的对象方法进行组件的更新操作\r\n        const {layout} = this.props;\r\n        const {customComponentInfoMap} = designerStarter;\r\n        const {elemConfigs} = designerStore;\r\n        let componentDefine: AbstractCustomComponentDefinition = customComponentInfoMap[layout!.type + ''];\r\n        if (componentDefine) {\r\n            const AbsCompImpl = componentDefine.getComponent();\r\n            if (AbsCompImpl) {\r\n                const config = layout.id! in elemConfigs! ? elemConfigs![layout.id!] : (function () {\r\n                    let initConfig = componentDefine.getInitConfig();\r\n                    initConfig.info.id = layout.id!;\r\n                    return initConfig;\r\n                })() as any;\r\n                new AbsCompImpl()!.create(this.ref!, config).then((instance: any) => {\r\n                    const {compInstances} = designerStore;\r\n                    compInstances[layout.id + ''] = instance;\r\n                });\r\n                delete elemConfigs![layout.id!];\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {layout} = this.props;\r\n        return (\r\n            <Suspense fallback={<Loading/>}>\r\n                <div\r\n                    id={layout.id}\r\n                    data-type={layout.type}\r\n                    data-locked={layout.locked}\r\n                    data-hide={layout.hide}\r\n                    key={layout.id + ''}\r\n                    style={{\r\n                        width: layout.width,\r\n                        height: layout.height,\r\n                        transform: `translate(${layout.position![0]}px, ${layout.position![1]}px)`,\r\n                        position: 'absolute',\r\n                        display: layout.hide ? 'none' : 'block',\r\n                    }} className={'lc-comp-item'}>\r\n                    <div ref={(ref) => this.ref = ref} style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        //todo 要优化\r\n                        pointerEvents: `${this.mode === 'view' ? 'auto' : 'none'}`,\r\n                        position: 'relative'\r\n                    }}/>\r\n                </div>\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ComponentContainer;","import designerStore from \"./store/DesignerStore\";\r\nimport eventOperateStore from \"./operate-provider/EventOperateStore\";\r\nimport designerStarter from \"./DesignerStarter\";\r\nimport {parseUrlParams} from \"../utils/URLUtil\";\r\nimport {SaveType} from \"./DesignerType\";\r\n\r\nconst {doScan} = designerStarter;\r\n\r\nexport const loadDesigner = () => {\r\n    //扫描组件\r\n    doScan();\r\n    //初始化项目数据\r\n    loadProjectData();\r\n}\r\n\r\n/**\r\n * 初始化项目操作类型。新增 / 更新\r\n */\r\nconst loadProjectData = () => {\r\n    let urlParams = parseUrlParams();\r\n    const {action} = urlParams;\r\n    if (['edit', 'view'].includes(action))\r\n        initExistProject();\r\n    else if (action === 'create')\r\n        initNewProject();\r\n    else\r\n        throw new Error('action is error')\r\n}\r\n\r\n/**\r\n * 初始化以创建方式打开时项目信息\r\n */\r\nconst initNewProject = () => {\r\n    let urlParams = parseUrlParams();\r\n    const {width, height, name} = urlParams;\r\n    const {doInit, setLoaded} = designerStore;\r\n    doInit({\r\n        canvasConfig: {\r\n            width: parseInt(width),\r\n            height: parseInt(height),\r\n        },\r\n        projectConfig: {\r\n            name: name\r\n        },\r\n    })\r\n    setLoaded(true);\r\n}\r\n\r\n/**\r\n * 初始化以更新方式打开时项目信息\r\n */\r\nconst initExistProject = () => {\r\n    let urlParams = parseUrlParams();\r\n    const {doInit, setLoaded} = designerStore;\r\n    const {abstractOperatorMap} = designerStarter;\r\n    const {projectConfig: {saveType = SaveType.LOCAL}} = designerStore;\r\n    abstractOperatorMap[saveType].getProject(urlParams.id).then((store: any) => {\r\n        if (store) {\r\n            doInit({\r\n                id: store.id,\r\n                canvasConfig: store.canvasConfig,\r\n                projectConfig: store.projectConfig,\r\n                elemConfigs: store.elemConfigs,\r\n                layoutConfigs: store.layoutConfigs,\r\n                statisticInfo: store.statisticInfo,\r\n                themeConfig: store.theme,\r\n                extendParams: store.extendParams,\r\n            })\r\n            //设置事件操作器的最大最小层级\r\n            const {setMinLevel, setMaxLevel} = eventOperateStore;\r\n            setMinLevel(store.layoutConfigs.minLevel || 0);\r\n            setMaxLevel(store.layoutConfigs.maxLevel || 0);\r\n        }\r\n        setLoaded(true);\r\n    })\r\n}","import React, {Component} from 'react';\r\nimport DesignerBackground from \"../../comps/lc/background/DesignerBackground\";\r\nimport './DesignerView.less';\r\nimport {MovableItemType} from \"../../lib/lc-movable/types\";\r\nimport Loading from \"../../lib/loading/Loading\";\r\nimport designerStore from \"../store/DesignerStore\";\r\nimport ComponentContainer from \"../../framework/core/ComponentContainer\";\r\nimport {loadDesigner} from \"../LoadDesigner\";\r\nimport {observer} from \"mobx-react\";\r\n\r\nclass DesignerView extends Component {\r\n\r\n    componentDidMount() {\r\n        //加载项目\r\n        loadDesigner();\r\n    }\r\n\r\n    generateElement = () => {\r\n        let {layoutConfigs} = designerStore!;\r\n        const sortLayout = Object.values(layoutConfigs).sort((a: MovableItemType, b: MovableItemType) => a.order! - b.order!);\r\n        return sortLayout.map((item: MovableItemType) => {\r\n            return <ComponentContainer layout={item} key={item.id}/>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {loaded, elemConfigs} = designerStore!;\r\n        return (\r\n            <>\r\n                {loaded ? <DesignerBackground config={elemConfigs!['80cc666f']['background'] || {}}>\r\n                    {this.generateElement()}\r\n                </DesignerBackground> : <Loading/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default observer(DesignerView);"],"sourceRoot":""}