{"version":3,"sources":["list/AddNewScreenDialog.tsx","list/icon/list-bottom.svg","list/icon/template-market.svg","list/icon/datasource.svg","list/list-del.svg","list/list-display.svg","list/list-edit.svg","list/LightChaserList.tsx"],"names":["AddNewScreenDialog","projectInfo","name","description","width","height","onOk","e","preventDefault","props","onCancel","this","visible","Dialog","title","className","onClose","onSubmit","ConfigItem","UnderLineInput","required","maxLength","onChange","target","value","type","min","parseInt","Select","defaultValue","options","label","LcButton","onClick","Component","LightChaserList","state","showAddDialog","addNewData","data","imageIdToUrl","toggleNewProVisible","addNewScreen","setState","urlParams","buildUrlParams","action","window","open","openScreen","dataset","savetype","id","currentTarget","params","EditorDesignerLoader","getInstance","scannerProjectOperators","designerStore","projectConfig","saveType","SaveType","LOCAL","abstractOperatorMap","getProjectSimpleInfoList","then","length","imageIds","forEach","item","imageId","screenshot","push","promise","map","ImgUtil","getImageFromLocalWithKey","Promise","all","res","key","Object","keys","innerWidth","src","listBottom","alt","datasource","templateMarket","style","margin","fontSize","stateText","stateColor","bgImgUrl","ProjectState","DRAFT","PUBLISH","backgroundImage","zIndex","listEdit","listDelImg","listDisplay","backgroundColor","color"],"mappings":"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","file":"static/js/18.a5061574.chunk.js","sourcesContent":["import React, {ChangeEvent, Component} from 'react';\r\nimport './style/AddNewScreenDialog.less';\r\nimport Dialog from \"../lib/lc-dialog/Dialog\";\r\nimport ConfigItem from \"../lib/lc-config-item/ConfigItem\";\r\nimport UnderLineInput from \"../lib/lc-input/UnderLineInput\";\r\nimport LcButton from \"../lib/lc-button/LcButton\";\r\nimport Select from \"../lib/lc-select/Select\";\r\n\r\nexport interface NewProjectInfoType {\r\n    name: string;\r\n    description?: string;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\ninterface AddNewScreenDialogProps {\r\n    onOk?: (data: NewProjectInfoType) => void;\r\n    onCancel?: () => void;\r\n    visible?: boolean;\r\n}\r\n\r\nclass AddNewScreenDialog extends Component<AddNewScreenDialogProps> {\r\n\r\n    projectInfo: NewProjectInfoType = {\r\n        name: '',\r\n        description: '',\r\n        width: 500,\r\n        height: 300\r\n    }\r\n\r\n    onOk = (e: any) => {\r\n        e.preventDefault();\r\n        const {onOk} = this.props;\r\n        onOk && onOk(this.projectInfo);\r\n    }\r\n\r\n    onCancel = () => {\r\n        const {onCancel} = this.props;\r\n        onCancel && onCancel();\r\n    }\r\n\r\n    render() {\r\n        const {visible = false} = this.props;\r\n        return (\r\n            <Dialog title={'新建大屏'} visible={visible} className={'add-new-screen-dialog'} onClose={this.onCancel}>\r\n                <form onSubmit={this.onOk}>\r\n                    <div className={'lc-add-new-screen'}>\r\n                        <ConfigItem title={'名称'}>\r\n                            <UnderLineInput required={true} maxLength={20}\r\n                                            onChange={(e: ChangeEvent<HTMLInputElement>) => this.projectInfo.name = e.target.value}/>\r\n                        </ConfigItem>\r\n                        <ConfigItem title={'描述'}>\r\n                            <UnderLineInput maxLength={60}\r\n                                            onChange={(e: ChangeEvent<HTMLInputElement>) => this.projectInfo.description = e.target.value}/>\r\n                        </ConfigItem>\r\n                        <ConfigItem title={'宽度'}>\r\n                            <UnderLineInput type={'number'} min={500} required={true}\r\n                                            onChange={(e: ChangeEvent<HTMLInputElement>) => this.projectInfo.width = parseInt(e.target.value)}/>\r\n                        </ConfigItem>\r\n                        <ConfigItem title={'高度'}>\r\n                            <UnderLineInput type={'number'} min={300} required={true}\r\n                                            onChange={(e: ChangeEvent<HTMLInputElement>) => this.projectInfo.height = parseInt(e.target.value)}/>\r\n                        </ConfigItem>\r\n                        <ConfigItem title={'存储'}>\r\n                            <Select defaultValue={'1'} options={[{value: '1', label: '本地存储'}]}/>\r\n                        </ConfigItem>\r\n                    </div>\r\n                    <div className={'add-new-screen-explain'}>\r\n                        <p>说明：</p>\r\n                        <p>1、名称不超过20字，描述不超过60字</p>\r\n                        <p>2、宽度必须&ge;500，高度必须&ge;300</p>\r\n                    </div>\r\n                    <div className={'add-new-screen-footer'}>\r\n                        <LcButton type={\"submit\"}>保存</LcButton>\r\n                        <LcButton onClick={this.onCancel}>取消</LcButton>\r\n                    </div>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewScreenDialog;","export default __webpack_public_path__ + \"static/media/list-bottom.5389dd50.svg\";","export default __webpack_public_path__ + \"static/media/template-market.b6765c6d.svg\";","export default __webpack_public_path__ + \"static/media/datasource.7f397ca1.svg\";","export default __webpack_public_path__ + \"static/media/list-del.19d35f77.svg\";","export default __webpack_public_path__ + \"static/media/list-display.31b224dd.svg\";","export default __webpack_public_path__ + \"static/media/list-edit.ce8d908b.svg\";","import React, {Component} from 'react';\r\nimport './style/LightChaserList.less';\r\nimport AddNewScreenDialog, {NewProjectInfoType} from \"./AddNewScreenDialog\";\r\nimport listBottom from './icon/list-bottom.svg';\r\nimport templateMarket from './icon/template-market.svg';\r\nimport datasource from './icon/datasource.svg';\r\nimport LcButton from \"../lib/lc-button/LcButton\";\r\n\r\nimport listDelImg from './list-del.svg';\r\nimport listDisplay from './list-display.svg';\r\nimport listEdit from './list-edit.svg';\r\nimport {buildUrlParams} from \"../utils/URLUtil\";\r\nimport {ImgUtil} from \"../utils/ImgUtil\";\r\nimport {ProjectState, SaveType} from \"../designer/DesignerType\";\r\nimport designerStore from \"../designer/store/DesignerStore\";\r\nimport EditorDesignerLoader from \"../designer/loader/EditorDesignerLoader\";\r\n\r\nclass LightChaserList extends Component<any> {\r\n\r\n    state: any = {\r\n        showAddDialog: false,\r\n        addNewData: {},\r\n        data: [],\r\n        imageIdToUrl: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        EditorDesignerLoader.getInstance().scannerProjectOperators();\r\n        const {projectConfig: {saveType = SaveType.LOCAL}} = designerStore;\r\n        EditorDesignerLoader.getInstance().abstractOperatorMap[saveType].getProjectSimpleInfoList().then((data: any) => {\r\n            if (data && data.length > 0) {\r\n                this.setState({data});\r\n                let imageIds: any = [];\r\n                data.forEach((item: any) => {\r\n                    let imageId = item.screenshot;\r\n                    if (imageId && imageId !== '')\r\n                        imageIds.push(imageId);\r\n                });\r\n                const promise = imageIds.map((imageId: any) => ImgUtil.getImageFromLocalWithKey(imageId));\r\n                let imageIdToUrl: any = {};\r\n                Promise.all(promise).then((res: any) => {\r\n                    res.forEach((item: any) => {\r\n                        const key = Object.keys(item)[0];\r\n                        imageIdToUrl[key] = item[key];\r\n                    });\r\n                    this.setState({imageIdToUrl});\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleNewProVisible = () => {\r\n        const {addNewScreen} = this.state;\r\n        this.setState({addNewScreen: !addNewScreen})\r\n    }\r\n\r\n    onOk = (data: NewProjectInfoType) => {\r\n        let urlParams = buildUrlParams({...data, ...{action: 'create'}});\r\n        this.setState({addNewScreen: false});\r\n        window.open(`/light-chaser-app/#/designer?${urlParams}`, '_blank');\r\n    }\r\n\r\n    onCancel = () => this.setState({addNewScreen: false});\r\n\r\n    openScreen = (e: any) => {\r\n        const {type, savetype} = e.target.dataset\r\n        let id = e.currentTarget.id;\r\n        if (type === 'edit') {\r\n            let params = buildUrlParams({\r\n                id: id,\r\n                action: 'edit'\r\n            });\r\n            window.open(`/light-chaser-app/#/designer?${params}`, '_blank');\r\n        } else if (type === 'show') {\r\n            window.open(`/light-chaser-app/#/view?id=${id}&saveType=${savetype}&action=view`, '_blank');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {addNewScreen, data, imageIdToUrl} = this.state;\r\n        let width = (window.innerWidth - 230 - (5 * 20)) / 5;\r\n        let height = width * (9 / 16);\r\n        return (\r\n            <div className={'lc-console'}>\r\n                <div className={'console-head'}>\r\n                    <div className={'console-head-title'}>LC 控制台</div>\r\n                </div>\r\n                <div className={'console-body'}>\r\n                    <div className={'console-list'}>\r\n                        <div className={'console-list-item'}>\r\n                            <div className={'item-icon'}><img src={listBottom} alt={'项目列表'}/></div>\r\n                            <div className={'item-text'}>项目列表</div>\r\n                        </div>\r\n                        <div className={'console-list-item'}>\r\n                            <div className={'item-icon'}><img src={datasource} alt={'数据源管理'}/></div>\r\n                            <div className={'item-text'}>数据源管理</div>\r\n                        </div>\r\n                        <div className={'console-list-item'}>\r\n                            <div className={'item-icon'}><img src={templateMarket} alt={'模板市场'}/></div>\r\n                            <div className={'item-text'}>模板市场</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'console-content'}>\r\n                        <div className={'content-body'}>\r\n                            <div className={'project-list'}>\r\n                                <div style={{width: width, height: height, margin: '0 20px 20px 0'}}>\r\n                                    <LcButton onClick={this.toggleNewProVisible}\r\n                                              style={{width: width, height: height, fontSize: 20}}>+ 新建项目</LcButton>\r\n                                </div>\r\n                                {data && data.map((item: any) => {\r\n                                    let bgImgUrl = imageIdToUrl[item?.screenshot];\r\n                                    let stateText, stateColor;\r\n                                    if (item.state === ProjectState.DRAFT) {\r\n                                        stateText = '草稿';\r\n                                        stateColor = '#FFB800';\r\n                                    } else if (item.state === ProjectState.PUBLISH) {\r\n                                        stateText = '已发布';\r\n                                        stateColor = '#00CC66';\r\n                                    }\r\n                                    return (\r\n                                        <div key={item.id + ''}\r\n                                             style={{\r\n                                                 width: width,\r\n                                                 height: height,\r\n                                                 backgroundImage: bgImgUrl && `url(${bgImgUrl})`,\r\n                                             }}\r\n                                             onClick={this.openScreen}\r\n                                             id={item.id + ''}\r\n                                             className={'project-item'}>\r\n                                            <div className={'pro-list-content'} style={{zIndex: 1}}>\r\n                                                <div className={'pro-content-title'}>{item?.name}</div>\r\n                                                <div className={'pro-content-operates'}>\r\n                                                    <div className={'operate-item'} data-type={'edit'}>\r\n                                                        <img src={listEdit} alt={'编辑'}/>\r\n                                                    </div>\r\n                                                    <div className={'operate-item'} data-type={'del'}>\r\n                                                        <img src={listDelImg} alt={'删除'}/>\r\n                                                    </div>\r\n                                                    <div className={'operate-item'} data-type={'show'}\r\n                                                         data-savetype={item.saveType}>\r\n                                                        <img src={listDisplay} alt={'展示'}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={'pro-content-footer'}>\r\n                                                <div className={'state-point'} style={{backgroundColor: stateColor}}/>\r\n                                                <div className={'state-text'}\r\n                                                     style={{color: stateColor}}>{stateText}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <AddNewScreenDialog onOk={this.onOk} onCancel={this.onCancel} visible={addNewScreen}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LightChaserList;"],"sourceRoot":""}