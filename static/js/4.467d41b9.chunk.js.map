{"version":3,"sources":["lib/lc-code-editer/CodeEditor.tsx","lib/lc-config-item/ConfigItemTB.tsx","comps/common-component/data-config/DataConfig.tsx","comps/antd/pie/AntdPieStyleConfig.tsx","comps/antd/ring-progress/AntdRingProgressConfig.tsx"],"names":["CodeEditor","props","editorDom","editor","valueControl","value","onChange","getValue","formatCodeShortKey","code","formatted","js_beautify","indent_size","space_in_empty_paren","setValue","formatCode","defaultValue","undefined","this","readonly","width","height","mode","CodeMirror","theme","lineNumbers","matchBrackets","smartIndent","readOnly","extraKeys","on","setSize","off","className","style","border","ref","dom","Component","ConfigItemTB","title","contentStyle","children","DataConfig","state","dataSource","dataSourcesChange","instance","update","data","reRender","setState","dataConfig","getConfig","ConfigItem","Select","options","label","ApiDataConfig","apiData","urlRef","useRef","url","methodRef","method","headerRef","JSON","stringify","header","paramsRef","params","flashFrequencyRef","flashFrequency","useState","testResult","setTestResult","UnderLineInput","current","e","target","color","display","alignItems","type","parseInt","LcButton","margin","onClick","ObjectUtil","stringToJsObj","sendHttpRequest","then","res","catch","err","message","error","parse","warning","StaticDataConfig","config","dataCode","staticData","dataStr","replace","operateType","OperateType","DATA","AntdPieStyleConfig","pieGraphicsChange","legendChange","legend","pieConfig","AntdPieGraphicsConfig","min","max","step","radius","event","parseFloat","innerRadius","startAngle","Math","PI","endAngle","itemStyle","pieStyle","fill","Array","isArray","length","buildColorModeData","exclude","stroke","borderRadius","showText","lineWidth","StatisticTextConfig","statistic","content","offset","fontSize","fontWeight","autoRotate","rotate","disEnable","setDisEnable","disabled","offsetX","offsetY","AntdPieFieldMapping","angleField","colorField","dataObj","Object","keys","forEach","key","push","fieldChange","AntdRingProgressStyleConfig","ringProgressGraphicsChange","AntdRingProgressGraphicsConfig","progressStyle","AntdRingProgressDataConfig","percent"],"mappings":"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","file":"static/js/4.467d41b9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport './lc-dark.css';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\nimport 'codemirror/addon/edit/matchbrackets.js';\r\nimport 'codemirror/addon/comment/comment.js';\r\nimport js_beautify from 'js-beautify';\r\n\r\ninterface CodeEditorProps {\r\n    value?: string;\r\n    defaultValue?: string;\r\n    onChange?: (value: string) => void;\r\n    readonly?: boolean;\r\n    width?: string;\r\n    height?: string;\r\n    mode?: 'javascript' | 'html' | 'css' | 'sql';\r\n}\r\n\r\nclass CodeEditor extends Component<CodeEditorProps> {\r\n    editorDom: any = null;\r\n    editor: any = null;\r\n    valueControl: boolean = true;\r\n    value: string = '';\r\n\r\n    constructor(props: CodeEditorProps) {\r\n        super(props);\r\n        const {value, defaultValue} = props;\r\n        this.valueControl = value !== undefined;\r\n        this.value = value || defaultValue || '';\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.editorDom == null)\r\n            return;\r\n        const {readonly, width, height, mode} = this.props;\r\n        this.editor = CodeMirror(this.editorDom, {\r\n            mode: mode || 'javascript',\r\n            theme: 'lc-dark',\r\n            lineNumbers: true,\r\n            matchBrackets: true,\r\n            smartIndent: true,\r\n            readOnly: readonly || false,\r\n            extraKeys: {\r\n                'Ctrl-/': 'toggleComment',\r\n                'Ctrl-Alt-L': this.formatCodeShortKey,\r\n            },\r\n        });\r\n        this.editor.setValue((this.value && js_beautify(this.value, {\r\n            indent_size: 2,\r\n            space_in_empty_paren: true,\r\n        })) || '');\r\n        this.editor.on('change', this.onChange);\r\n        this.editor.setSize(width || '100%', height || '100%');\r\n    }\r\n\r\n    onChange = () => {\r\n        const {onChange} = this.props;\r\n        onChange && onChange(this.editor.getValue());\r\n    }\r\n\r\n    formatCodeShortKey = () => {\r\n        if (!this.editor) return;\r\n        const code = this.editor.getValue();\r\n        const formatted = js_beautify(code, {\r\n            indent_size: 2,\r\n            space_in_empty_paren: true,\r\n        });\r\n        this.editor.setValue(formatted);\r\n    };\r\n\r\n    formatCode = (code: string) => {\r\n        return js_beautify(code, {\r\n            indent_size: 2,\r\n            space_in_empty_paren: true,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.valueControl && this.editor) {\r\n            this.editor.off('change', this.onChange);\r\n            this.editor.setValue(this.formatCode(this.props.value || ''), 0);\r\n            this.editor.on('change', this.onChange);\r\n        }\r\n        return (\r\n            <div className={'lc-code-editor'} style={{border: '1px solid #373738'}} ref={dom => this.editorDom = dom}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeEditor;","import React, {Component, CSSProperties} from 'react';\r\nimport './ConfigItemTB.less';\r\n\r\ninterface ConfigItemTBProps {\r\n    title: string;\r\n    contentStyle?: CSSProperties;\r\n}\r\n\r\nclass ConfigItemTB extends Component<ConfigItemTBProps> {\r\n    render() {\r\n        const {title = '', contentStyle = {width: 90}} = this.props;\r\n        return (\r\n            <div className={'lc-config-item-tb'}>\r\n                <div className={'item-tb-title'}>{title}</div>\r\n                <div className={'item-tb-content'} style={{...contentStyle}}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfigItemTB;","import React, {Component, useRef, useState} from 'react';\r\nimport ConfigItem from \"../../../lib/lc-config-item/ConfigItem\";\r\nimport CodeEditor from \"../../../lib/lc-code-editer/CodeEditor\";\r\nimport LcButton from \"../../../lib/lc-button/LcButton\";\r\nimport Select from \"../../../lib/lc-select/Select\";\r\nimport './DataConfig.less';\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport {DataConfigType} from \"../../../designer/DesignerType\";\r\nimport {OperateType} from \"../../../framework/core/AbstractComponent\";\r\nimport {sendHttpRequest} from \"../../../utils/HttpUtil\";\r\nimport UnderLineInput from \"../../../lib/lc-input/UnderLineInput\";\r\nimport ConfigItemTB from \"../../../lib/lc-config-item/ConfigItemTB\";\r\nimport {message} from \"antd\";\r\nimport ObjectUtil from \"../../../utils/ObjectUtil\";\r\n\r\nclass DataConfig extends Component<ConfigType> {\r\n\r\n    state = {\r\n        dataSource: 'static',\r\n    }\r\n\r\n    constructor(props: ConfigType) {\r\n        super(props);\r\n        const {instance} = props;\r\n        const dataConfig: DataConfigType = instance.getConfig().data;\r\n        this.state = {\r\n            dataSource: dataConfig?.dataSource || 'static',\r\n        }\r\n    }\r\n\r\n    dataSourcesChange = (value: any) => {\r\n        const {instance} = this.props;\r\n        instance.update({data: {dataSource: value}}, {reRender: false});\r\n        this.setState({\r\n            dataSource: value,\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {instance} = this.props;\r\n        const {dataSource} = this.state;\r\n        return (\r\n            <div className={'lc-data-config'}>\r\n                <ConfigItem title={'数据源'} contentStyle={{width: 100}}>\r\n                    <Select onChange={(value) => this.dataSourcesChange(value)} defaultValue={dataSource} options={[\r\n                        {value: 'static', label: '静态数据'},\r\n                        {value: 'api', label: '接口(API)'},\r\n                        // {value: 'database', label: '数据库'},\r\n                        // {value: 'excel', label: 'EXCEL导入'},\r\n                    ]}/>\r\n                </ConfigItem>\r\n                {dataSource === 'static' &&\r\n                <StaticDataConfig instance={instance}/>}\r\n                {dataSource === 'api' &&\r\n                <ApiDataConfig instance={instance}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const ApiDataConfig: React.FC<ConfigType> = ({instance}) => {\r\n    const config: DataConfigType = instance.getConfig().data;\r\n    const {apiData} = config;\r\n    const urlRef = useRef(apiData?.url || '');\r\n    const methodRef = useRef(apiData?.method || '');\r\n    const headerRef = useRef(JSON.stringify(apiData?.header || {}));\r\n    const paramsRef = useRef(JSON.stringify(apiData?.params || {}));\r\n    const flashFrequencyRef = useRef(apiData?.flashFrequency || 5);\r\n    const [testResult, setTestResult] = useState<any>('');\r\n\r\n    const testApi = () => {\r\n        if (urlRef.current === '') {\r\n            message.error('接口地址不能为空');\r\n            return;\r\n        }\r\n        if (methodRef.current === '') {\r\n            message.error('请求方式不能为空');\r\n            return;\r\n        }\r\n        let header = ObjectUtil.stringToJsObj(headerRef.current);\r\n        if (!header) {\r\n            message.error('请求头不符合json格式');\r\n            return;\r\n        }\r\n        let params = ObjectUtil.stringToJsObj(paramsRef.current);\r\n        if (!params) {\r\n            message.error('请求参数不符合json格式');\r\n            return;\r\n        }\r\n        sendHttpRequest(urlRef.current, methodRef.current, header, params).then(res => {\r\n            setTestResult(JSON.stringify(res));\r\n        }).catch(err => {\r\n            setTestResult(JSON.stringify(err));\r\n        });\r\n    }\r\n\r\n    const doSave = () => {\r\n        if (urlRef.current === '') {\r\n            message.warning('接口地址不能为空');\r\n            return;\r\n        }\r\n        if (methodRef.current === '') {\r\n            message.warning('请求方式不能为空');\r\n            return;\r\n        }\r\n\r\n        let header = ObjectUtil.stringToJsObj(headerRef.current);\r\n        if (!header) message.error('请求头不符合json格式');\r\n        let params = ObjectUtil.stringToJsObj(paramsRef.current);\r\n        if (!params) message.error('请求参数不符合json格式');\r\n        instance.update({\r\n            data: {\r\n                apiData: {\r\n                    url: urlRef.current,\r\n                    method: methodRef.current,\r\n                    header: header,\r\n                    params: params,\r\n                    flashFrequency: flashFrequencyRef.current\r\n                }\r\n            },\r\n            //todo 要拆分出去\r\n            style: {\r\n                data: JSON.parse(testResult)\r\n            }\r\n        });\r\n    }\r\n\r\n    const headerOnChange = (value: string) => {\r\n        headerRef.current = value;\r\n    }\r\n\r\n    const paramsOnChange = (value: string) => {\r\n        paramsRef.current = value;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ConfigItem title={'接口地址'} contentStyle={{width: 240}}>\r\n                <UnderLineInput defaultValue={urlRef.current} onChange={e => urlRef.current = e.target.value}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'请求方式'} contentStyle={{width: 100}}>\r\n                <Select options={[\r\n                    {value: 'get', label: 'GET'},\r\n                    {value: 'post', label: 'POST'},\r\n                    {value: 'put', label: 'PUT'},\r\n                    {value: 'delete', label: 'DELETE'},\r\n                ]} defaultValue={methodRef.current} onChange={value => methodRef.current = value}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'刷新频率'} contentStyle={{\r\n                color: '#c6c9cd',\r\n                display: 'flex',\r\n                width: 40,\r\n                alignItems: 'center'\r\n            }}>\r\n                <UnderLineInput type={'number'} defaultValue={flashFrequencyRef.current}\r\n                                onChange={e => flashFrequencyRef.current = parseInt(e.target.value)}/>\r\n                <div>秒</div>\r\n            </ConfigItem>\r\n            <ConfigItemTB title={'请求头(JSON)'} contentStyle={{width: '95%'}}>\r\n                <CodeEditor onChange={headerOnChange} defaultValue={headerRef.current}/>\r\n            </ConfigItemTB>\r\n            <ConfigItemTB title={'请求参数(JSON)'} contentStyle={{width: '95%'}}>\r\n                <CodeEditor onChange={paramsOnChange} defaultValue={paramsRef.current}/>\r\n            </ConfigItemTB>\r\n            <ConfigItemTB title={'响应结果'} contentStyle={{width: '95%'}}>\r\n                <CodeEditor readonly={true} value={testResult}/>\r\n            </ConfigItemTB>\r\n            <LcButton style={{width: 'calc(50% - 16px)', margin: '0 7px'}} onClick={testApi}>测试接口</LcButton>\r\n            <LcButton style={{width: 'calc(50% - 16px)', margin: '0 7px'}} onClick={doSave}>保存</LcButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const StaticDataConfig: React.FC<ConfigType> = ({instance}) => {\r\n\r\n    const config: DataConfigType = instance.getConfig().data;\r\n    let dataCode = JSON.stringify(config.staticData?.data);\r\n\r\n    const flashData = () => {\r\n        try {\r\n            const dataStr = dataCode.replace(/'/g, '\"').replace(/\\s/g, '');\r\n            const data = JSON.parse(dataStr);\r\n            instance.update({data: {staticData: {data}}, style: {data}},\r\n                {reRender: true, operateType: OperateType.DATA});\r\n        } catch (e: any) {\r\n            message.error('数据格式错误');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CodeEditor onChange={(value) => dataCode = value} height={'400'} defaultValue={dataCode || ''}/>\r\n            <div className={'static-data-btn-arr'}><LcButton onClick={flashData}>保存并刷新数据</LcButton></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DataConfig;","import React, {Component, useState} from 'react';\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport ConfigItem from \"../../../lib/lc-config-item/ConfigItem\";\r\nimport UnderLineInput from \"../../../lib/lc-input/UnderLineInput\";\r\nimport AntdPie from \"./AntdPie\";\r\nimport {WritablePieOptions} from \"../../antd-common/types\";\r\nimport ColorMode, {ColorModeValue} from \"../../../lib/lc-color-mode/ColorMode\";\r\nimport BaseColorPicker from \"../../../lib/lc-color-picker/BaseColorPicker\";\r\nimport CfgItemBorder from \"../../../lib/lc-config-item/CfgItemBorder\";\r\nimport {PieOptions, ShapeStyle, StatisticText} from \"@antv/g2plot\";\r\nimport LcSwitch from \"../../../lib/lc-switch/LcSwitch\";\r\nimport Select from '../../../lib/lc-select/Select';\r\nimport {Types} from \"@antv/g2\";\r\nimport {AntdLegend} from \"../../antd-common/config/AntdFragment\";\r\nimport {Legend} from \"@antv/g2plot/lib/types/legend\";\r\nimport Accordion from \"../../../lib/lc-accordion/Accordion\";\r\nimport {Option} from \"../../../lib/lc-select/SelectType\";\r\nimport ConfigCard from \"../../../lib/lc-config-card/ConfigCard\";\r\n\r\nexport default class AntdPieStyleConfig extends Component<ConfigType> {\r\n\r\n    pieGraphicsChange = (config: WritablePieOptions) => {\r\n        const instance = this.props.instance as AntdPie;\r\n        instance.update({style: config});\r\n    }\r\n\r\n    legendChange = (legend: Legend) => {\r\n        const instance = this.props.instance as AntdPie;\r\n        instance.update({style: {legend}});\r\n    }\r\n\r\n    render() {\r\n        const instance = this.props.instance as AntdPie;\r\n        const pieConfig = instance.getConfig()!.style as PieOptions;\r\n        return (\r\n            <>\r\n                <AntdLegend onChange={this.legendChange} config={pieConfig.legend}/>\r\n                <AntdPieGraphicsConfig onChange={this.pieGraphicsChange} config={pieConfig}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface AntdPieGraphicsConfigProps {\r\n    config: PieOptions;\r\n\r\n    onChange(config: WritablePieOptions): void;\r\n}\r\n\r\nexport const AntdPieGraphicsConfig: React.FC<AntdPieGraphicsConfigProps> = ({config, onChange}) => {\r\n\r\n    const pieColorChange = (data: ColorModeValue) => {\r\n        const {mode, value} = data;\r\n        switch (mode) {\r\n            case 'single':\r\n            case 'multi':\r\n                onChange({color: value});\r\n                break;\r\n            case 'gradient':\r\n                onChange({pieStyle: {fill: `l(0.4,0.5) 0:${value[0]} 1:${value[1]}`}});\r\n                break;\r\n        }\r\n    }\r\n\r\n    const buildColorModeData = (): ColorModeValue => {\r\n        let mode = 'single', value: string | string[];\r\n        let multi = Array.isArray(config.color) && config.color.length > 1;\r\n        if (multi) {\r\n            mode = 'multi';\r\n            value = config.color as string[];\r\n        } else\r\n            value = config.color as string;\r\n        return {mode, value};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Accordion title={'图形'}>\r\n                <ConfigItem title={\"半径\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={1} step={0.01}\r\n                                    defaultValue={config?.radius || 0.9}\r\n                                    onChange={(event) => onChange({radius: parseFloat(event.target.value)})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"内径\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={1} step={0.01}\r\n                                    defaultValue={config?.innerRadius || 0}\r\n                                    onChange={(event) => onChange({innerRadius: parseFloat(event.target.value)})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"起始角度\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={2} step={0.01}\r\n                                    defaultValue={config?.startAngle || 0}\r\n                                    onChange={(event) => onChange({startAngle: parseFloat(event.target.value) * Math.PI})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"结束角度\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={2} step={0.01}\r\n                                    defaultValue={config?.endAngle || 0}\r\n                                    onChange={(event) => onChange({endAngle: parseFloat(event.target.value) * Math.PI})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'} itemStyle={{width: '100%'}} contentStyle={{width: '85%'}}>\r\n                    <ColorMode onChange={pieColorChange} data={buildColorModeData()}\r\n                               exclude={['gradient']}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'描边颜色'}>\r\n                    <CfgItemBorder width={'100%'}>\r\n                        <BaseColorPicker\r\n                            defaultValue={(config?.pieStyle as ShapeStyle)?.stroke || '#fff'}\r\n                            onChange={(value) => onChange({pieStyle: {stroke: value}})}\r\n                            style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n                <ConfigItem title={'描边宽度'}>\r\n                    <UnderLineInput type={\"number\"} min={0}\r\n                                    defaultValue={(config?.pieStyle as ShapeStyle)?.lineWidth || 0}\r\n                                    onChange={(event) => onChange({pieStyle: {lineWidth: parseInt(event.target.value)}})}/>\r\n                </ConfigItem>\r\n            </Accordion>\r\n\r\n            <Accordion title={'标题'}>\r\n                <StatisticTextConfig config={config?.statistic?.title || false}\r\n                                     onChange={(config) => onChange({statistic: {title: config}})}/>\r\n            </Accordion>\r\n\r\n            <Accordion title={'内容'}>\r\n                <StatisticTextConfig config={config?.statistic?.content || false}\r\n                                     onChange={(config) => onChange({statistic: {content: config}})}/>\r\n            </Accordion>\r\n\r\n            <Accordion title={\"标签\"}>\r\n                <ConfigItem title={'位置'}>\r\n                    <Select defaultValue={(config?.label as Types.GeometryLabelCfg)?.type || 'outer'}\r\n                            onChange={(value) => onChange({label: {type: value}})}\r\n                            options={[\r\n                                {value: 'inner', label: '内测'},\r\n                                {value: 'outer', label: '外侧'}]}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'偏移'}>\r\n                    <UnderLineInput type={\"number\"}\r\n                                    defaultValue={(config?.label as Types.GeometryLabelCfg)?.offset || 0}\r\n                                    onChange={(event) => onChange({label: {offset: parseInt(event.target.value)}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"字号\"}>\r\n                    <UnderLineInput type={'number'} min={0}\r\n                                    defaultValue={(config?.label as Types.GeometryLabelCfg)?.style?.fontSize || 12}\r\n                                    onChange={(event) => onChange({label: {style: {fontSize: parseInt(event.target.value)}}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"加粗\"}>\r\n                    <UnderLineInput type={'number'} min={100} max={900} step={100}\r\n                                    defaultValue={parseInt((config?.label as Types.GeometryLabelCfg)?.style?.fontWeight || 500)}\r\n                                    onChange={(event) => onChange({label: {style: {fontWeight: parseInt(event.target.value)}}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"自动旋转\"}>\r\n                    <LcSwitch defaultValue={!!(config?.label as Types.GeometryLabelCfg)?.autoRotate}\r\n                              onChange={(value) => onChange({label: {autoRotate: value}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"旋转角度\"}>\r\n                    <UnderLineInput type={'number'} min={0} max={2} step={0.01}\r\n                                    defaultValue={(config?.label as Types.GeometryLabelCfg).rotate || 0}\r\n                                    onChange={(event) => onChange({label: {rotate: parseFloat(event.target.value) * Math.PI}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'}>\r\n                    <CfgItemBorder width={'100%'}>\r\n                        <BaseColorPicker\r\n                            defaultValue={(config?.label as Types.GeometryLabelCfg)?.style?.fill || '#fff'}\r\n                            onChange={(value) => onChange({label: {style: {fill: value}}})}\r\n                            style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n            </Accordion>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport interface AntdStatisticTextConfigProps {\r\n    config: StatisticText | false;\r\n\r\n    onChange(config: StatisticText | false): void;\r\n}\r\n\r\nexport const StatisticTextConfig: React.FC<AntdStatisticTextConfigProps> = ({config, onChange}) => {\r\n\r\n    const [disEnable, setDisEnable] = useState(!!config);\r\n\r\n    return (\r\n        <>\r\n            <ConfigItem title={\"开启\"}>\r\n                <LcSwitch defaultValue={disEnable}\r\n                          onChange={(value) => {\r\n                              let titleConfig: StatisticText | boolean;\r\n                              if (value) titleConfig = {style: {fontSize: '12px', color: '#fff'}, content: 'text'}\r\n                              else titleConfig = false;\r\n                              onChange(titleConfig)\r\n                              setDisEnable(value)\r\n                          }}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"内容\"}>\r\n                <UnderLineInput defaultValue={(config as StatisticText)?.content || 'text'}\r\n                                disabled={!disEnable}\r\n                                onChange={(event) => onChange({content: event.target.value})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"字号\"}>\r\n                <UnderLineInput type={'number'} min={10}\r\n                                disabled={!disEnable}\r\n                                defaultValue={parseInt(((config as StatisticText)?.style as any)?.fontSize || '12')}\r\n                                onChange={(event) => onChange({style: {fontSize: event.target.value + 'px'}})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"加粗\"}>\r\n                <UnderLineInput type={'number'} min={100} max={900} step={100}\r\n                                disabled={!disEnable}\r\n                                defaultValue={parseInt(((config as StatisticText)?.style as any)?.fontWeight || '500')}\r\n                                onChange={(event) => onChange({style: {fontWeight: parseInt(event.target.value)}})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色'}>\r\n                <CfgItemBorder width={'100%'}>\r\n                    <BaseColorPicker\r\n                        disabled={!disEnable}\r\n                        defaultValue={((config as StatisticText)?.style as any)?.value || '#fff'}\r\n                        onChange={(value) => onChange({style: {color: value}})}\r\n                        style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                </CfgItemBorder>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"x偏移\"}>\r\n                <UnderLineInput type={'number'}\r\n                                disabled={!disEnable}\r\n                                defaultValue={(config as StatisticText)?.offsetX || 0}\r\n                                onChange={(event) => onChange({offsetX: parseInt(event.target.value)})}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={\"y偏移\"}>\r\n                <UnderLineInput type={'number'}\r\n                                disabled={!disEnable}\r\n                                defaultValue={(config as StatisticText)?.offsetY || 0}\r\n                                onChange={(event) => onChange({offsetY: parseInt(event.target.value)})}/>\r\n            </ConfigItem>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport const AntdPieFieldMapping: React.FC<ConfigType<AntdPie>> = ({instance}) => {\r\n    const config = instance.getConfig()!.style;\r\n    const {data, angleField, colorField} = config!;\r\n    const options: Option[] = [];\r\n    if (data && data.length >= 1) {\r\n        const dataObj = data[0];\r\n        Object.keys(dataObj).forEach(key => options.push({label: key, value: key}))\r\n    }\r\n\r\n    const fieldChange = (config: WritablePieOptions) => {\r\n        instance.update({style: config});\r\n    }\r\n\r\n    return (\r\n        <ConfigCard title={'字段映射'}>\r\n            <ConfigItem title={'角度字段'}>\r\n                <Select options={options} defaultValue={angleField}\r\n                        onChange={(value => fieldChange({angleField: value}))}/>\r\n            </ConfigItem>\r\n            <ConfigItem title={'颜色字段'}>\r\n                <Select options={options} defaultValue={colorField}\r\n                        onChange={(value => fieldChange({colorField: value}))}/>\r\n            </ConfigItem>\r\n        </ConfigCard>\r\n    )\r\n}\r\n","import React, {Component} from 'react';\r\nimport {ConfigType} from \"../../../designer/right/ConfigType\";\r\nimport {WritableRingProgressOptions, WritableRoseOptions} from \"../../antd-common/types\";\r\nimport AntdCommonRose from \"../../antd-common/rose/AntdCommonRose\";\r\nimport {RingProgressOptions, ShapeStyle, StatisticText} from \"@antv/g2plot\";\r\nimport ColorMode, {ColorModeValue} from \"../../../lib/lc-color-mode/ColorMode\";\r\nimport Accordion from \"../../../lib/lc-accordion/Accordion\";\r\nimport ConfigItem from \"../../../lib/lc-config-item/ConfigItem\";\r\nimport UnderLineInput from \"../../../lib/lc-input/UnderLineInput\";\r\nimport CfgItemBorder from \"../../../lib/lc-config-item/CfgItemBorder\";\r\nimport BaseColorPicker from \"../../../lib/lc-color-picker/BaseColorPicker\";\r\nimport {StatisticTextConfig} from \"../pie/AntdPieStyleConfig\";\r\nimport {DataConfigType} from \"../../../designer/DesignerType\";\r\nimport Select from \"../../../lib/lc-select/Select\";\r\nimport {ApiDataConfig} from \"../../common-component/data-config/DataConfig\";\r\nimport AntdRingProgress from \"./AntdRingProgress\";\r\nimport {OperateType} from \"../../../framework/core/AbstractComponent\";\r\n\r\nexport class AntdRingProgressStyleConfig extends Component<ConfigType> {\r\n\r\n    ringProgressGraphicsChange = (config: WritableRoseOptions) => {\r\n        const instance = this.props.instance as AntdCommonRose;\r\n        instance.update({style: config});\r\n    }\r\n\r\n\r\n    render() {\r\n        const {instance} = this.props;\r\n        const config: RingProgressOptions = instance.getConfig().style as RingProgressOptions\r\n        return (\r\n            <>\r\n                <AntdRingProgressGraphicsConfig config={config}\r\n                                                onChange={this.ringProgressGraphicsChange}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport interface AntdRingProgressGraphicsConfigProps {\r\n    config: RingProgressOptions;\r\n\r\n    onChange(config: WritableRingProgressOptions): void;\r\n}\r\n\r\nexport const AntdRingProgressGraphicsConfig: React.FC<AntdRingProgressGraphicsConfigProps> = ({config, onChange}) => {\r\n\r\n    const ringProgressColorChange = (data: ColorModeValue) => {\r\n        const {mode, value} = data;\r\n        switch (mode) {\r\n            case 'single':\r\n            case 'multi':\r\n                onChange({color: value, progressStyle: {fill: undefined}});\r\n                break;\r\n        }\r\n    }\r\n\r\n    const buildColorModeData = (): ColorModeValue => {\r\n        let mode = 'multi', value: string | string[];\r\n        let multi = Array.isArray(config.color) && config.color.length > 1;\r\n        if (multi) {\r\n            value = config.color as string[];\r\n        } else\r\n            value = ['#00c4ff', '#fff']\r\n        return {mode, value};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Accordion title={'图形'}>\r\n                <ConfigItem title={\"半径\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={1} step={0.01}\r\n                                    defaultValue={config?.radius || 0.9}\r\n                                    onChange={(event) => onChange({radius: parseFloat(event.target.value)})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"内径\"}>\r\n                    <UnderLineInput type={\"number\"} min={0} max={1} step={0.01}\r\n                                    defaultValue={config?.innerRadius || 0}\r\n                                    onChange={(event) => onChange({innerRadius: parseFloat(event.target.value)})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'} itemStyle={{width: '100%'}} contentStyle={{width: '85%'}}>\r\n                    <ColorMode onChange={ringProgressColorChange} data={buildColorModeData()}\r\n                               exclude={['gradient', 'single']}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'描边颜色'}>\r\n                    <CfgItemBorder width={'100%'}>\r\n                        <BaseColorPicker\r\n                            defaultValue={(config?.progressStyle as ShapeStyle)?.stroke || '#fff'}\r\n                            onChange={(value) => onChange({progressStyle: {stroke: value}})}\r\n                            style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n                <ConfigItem title={'描边宽度'}>\r\n                    <UnderLineInput type={\"number\"} min={0}\r\n                                    defaultValue={(config?.progressStyle as ShapeStyle)?.lineWidth || 0}\r\n                                    onChange={(event) => onChange({progressStyle: {lineWidth: parseInt(event.target.value)}})}/>\r\n                </ConfigItem>\r\n            </Accordion>\r\n            <Accordion title={'标题'}>\r\n                <StatisticTextConfig config={config?.statistic?.title || false}\r\n                                     onChange={(config) => onChange({statistic: {title: config}})}/>\r\n            </Accordion>\r\n            <Accordion title={'内容'}>\r\n                <ConfigItem title={\"字号\"}>\r\n                    <UnderLineInput type={'number'} min={10}\r\n                                    defaultValue={parseInt(((config?.statistic?.content as StatisticText)?.style as any)?.fontSize || '12')}\r\n                                    onChange={(event) => onChange({statistic: {content: {style: {fontSize: event.target.value + 'px'}}}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"加粗\"}>\r\n                    <UnderLineInput type={'number'} min={100} max={900} step={100}\r\n                                    defaultValue={((config?.statistic?.content as StatisticText)?.style as any)?.fontWeight || 500}\r\n                                    onChange={(event) => onChange({statistic: {content: {style: {fontWeight: parseInt(event.target.value)}}}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={'颜色'}>\r\n                    <CfgItemBorder width={'100%'}>\r\n                        <BaseColorPicker\r\n                            defaultValue={((config?.statistic?.content as StatisticText)?.style as any)?.color || '#fff'}\r\n                            onChange={(value) => onChange({statistic: {content: {style: {color: value}}}})}\r\n                            style={{width: '100%', height: '15px', borderRadius: 2}} showText={true}/>\r\n                    </CfgItemBorder>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"x偏移\"}>\r\n                    <UnderLineInput type={'number'}\r\n                                    defaultValue={(config?.statistic?.content as StatisticText)?.offsetX || 0}\r\n                                    onChange={(event) => onChange({statistic: {content: {offsetX: parseInt(event.target.value)}}})}/>\r\n                </ConfigItem>\r\n                <ConfigItem title={\"y偏移\"}>\r\n                    <UnderLineInput type={'number'}\r\n                                    defaultValue={(config?.statistic?.content as StatisticText)?.offsetY || 0}\r\n                                    onChange={(event) => onChange({statistic: {content: {offsetY: parseInt(event.target.value)}}})}/>\r\n                </ConfigItem>\r\n            </Accordion>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport class AntdRingProgressDataConfig extends Component<ConfigType<AntdRingProgress>> {\r\n\r\n    state = {\r\n        dataSource: 'static',\r\n    }\r\n\r\n    constructor(props: ConfigType<AntdRingProgress>) {\r\n        super(props);\r\n        const {instance} = props;\r\n        const dataConfig: DataConfigType = instance.getConfig()!.data!;\r\n        this.state = {\r\n            dataSource: dataConfig?.dataSource || 'static',\r\n        }\r\n    }\r\n\r\n    dataSourcesChange = (value: any) => {\r\n        const {instance} = this.props;\r\n        instance.update({data: {dataSource: value}}, {reRender: false});\r\n        this.setState({\r\n            dataSource: value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {instance} = this.props;\r\n        const {dataSource} = this.state;\r\n        const dataConfig: DataConfigType = instance.getConfig()!.data!;\r\n        return (\r\n            <div className={'lc-data-config'}>\r\n                <ConfigItem title={'数据源'} contentStyle={{width: 100}}>\r\n                    <Select onChange={(value) => this.dataSourcesChange(value)} defaultValue={dataSource} options={[\r\n                        {value: 'static', label: '静态数据'},\r\n                        {value: 'api', label: '接口(API)'},\r\n                    ]}/>\r\n                </ConfigItem>\r\n                {dataSource === 'static' && <>\r\n                    <ConfigItem title={'百分比值'} contentStyle={{width: 240}}>\r\n                        <UnderLineInput defaultValue={dataConfig.staticData?.data || 0}\r\n                                        type={'number'} min={0} max={1} step={0.01}\r\n                                        onChange={e => {\r\n                                            const value = parseFloat(e.target.value);\r\n                                            instance.update({\r\n                                                data: {staticData: {data: value}},\r\n                                                style: {percent: value}\r\n                                            }, {\r\n                                                reRender: true,\r\n                                                operateType: OperateType.DATA,\r\n                                            });\r\n                                        }}/>\r\n                    </ConfigItem>\r\n                </>}\r\n                {dataSource === 'api' &&\r\n                <ApiDataConfig instance={instance}/>}\r\n            </div>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}