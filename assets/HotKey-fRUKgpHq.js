var a=Object.defineProperty;var h=(n,i,t)=>i in n?a(n,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[i]=t;var e=(n,i,t)=>(h(n,typeof i!="symbol"?i+"":i,t),t);import{r as u}from"./index-Duc4ZoM_.js";import{e as y}from"./ViewDesignerLoader-8rMP9FZs.js";import{H as s}from"./DesignerPage-hOKeX8hE.js";import"./mobxreact.esm-AXuQb6fD.js";import"./LocalOperator-t4oOcFvM.js";import"./GlobalMessage-I0KrOayq.js";import"./MainRouter-l7Z1Z1jr.js";import"./render-8hUH_M6B.js";import"./AntdIcon-jwWmiLqW.js";import"./InfoCircleFilled-JfnNzh3b.js";import"./useZIndex-c7eQO3Zz.js";import"./index-AfMii643.js";import"./FetchUtil-5ZwtxN_0.js";import"./Data-_fslVRGK.js";import"./index--SWnmJ5Q.js";import"./FontGlobal-IF-0qGeT.js";import"./PreviewOpen-xNkBcbY-.js";import"./System-wlPeHLhg.js";import"./index-KGsAQAl1.js";import"./zoom-1qZDylxx.js";import"./Compact-BtIEhQqw.js";import"./Dialog-vSMHMWDI.js";import"./Grid-qWvRWUZo.js";import"./UIContainer-fqZbFePv.js";import"./Help-Q6DYu7mz.js";import"./Input-Fu5_43az.js";import"./MonacoEditor-AmRPsGTx.js";import"./Button-Tm3IfQtm.js";import"./Plus-WQxU0q_G.js";import"./pickAttrs-UI4Ho79H.js";import"./collapse-aS6vX33V.js";import"./fade-CRG4MrDV.js";import"./useForceUpdate-rXHM3SwU.js";import"./button-cD7Pe9UH.js";import"./omit-zfc2TTl_.js";import"./EyeOutlined-R3RbAP4C.js";import"./index-foMHq-FM.js";import"./ActionButton-AsinbvHa.js";import"./Info-kImE1q_J.js";import"./NumberInput-WrPaUvHm.js";import"./Select-wGR39UQA.js";import"./Radio-kbTZ0tv0.js";import"./ThemeEditor-2NmMzzG7.js";import"./ColorPicker-pyjWXEAx.js";import"./PurePanel-ruJ4o-iR.js";import"./index-tOmn1sxg.js";import"./Overflow-2V5ntg0K.js";import"./CardPanel-GnLi4EHp.js";const d=["control + s","alt","control + l","control + shift + l","control + h","control + f","control + k","control + 1","control + 2","control + 3","control + 4","control + 5","control + g","control + shift + g"];class at extends u.Component{constructor(t){super(t);e(this,"handlerMapping",{});e(this,"currHotKey",[]);e(this,"existHandlerKey","");e(this,"specialDomCache",{});e(this,"getSpecialDomCache",t=>{const r=this.specialDomCache[t];if(r)return r;{const o=document.querySelector(t);return o?(this.specialDomCache[t]=o,o):null}});e(this,"doHandler",(t,r)=>{const{handler:o,triggerType:p=s.SINGLE,range:c}=this.handlerMapping[r]||{};if(o&&(p===s.SINGLE&&this.existHandlerKey!==r||p===s.COILED)){const{pointerTarget:l}=y;if(c){const m=this.getSpecialDomCache(c);if(!m||!m.contains(l))return}Array.isArray(o)?o.forEach(m=>m(t)):o(t),this.existHandlerKey=r}});e(this,"keyDown",t=>{const r=t.key.toLowerCase();this.currHotKey.some(p=>p===r)||this.currHotKey.push(r);const o=this.currHotKey.join(" + ");d.some(p=>p===o)&&t.preventDefault(),this.doHandler(t,o)});e(this,"keyUp",t=>{const r=t.key.toLowerCase();this.currHotKey.some(o=>o===r)&&(this.currHotKey=this.currHotKey.filter(o=>o!==r),this.existHandlerKey="")});e(this,"onBlur",()=>{this.currHotKey=[],this.existHandlerKey=""});this.handlerMapping=t.handlerMapping}componentDidMount(){document.addEventListener("keydown",this.keyDown),document.addEventListener("keyup",this.keyUp),window.onblur=this.onBlur}componentWillUnmount(){document.removeEventListener("keydown",this.keyDown),document.removeEventListener("keyup",this.keyUp),window.onblur=null}render(){return null}}export{at as default};
