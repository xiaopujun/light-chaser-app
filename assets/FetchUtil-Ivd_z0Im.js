class r{static async get(n,s={}){return s.method="GET",r.request(n,s)}static async post(n,s,e={}){return e.method="POST",s instanceof FormData?e.body=s:(e.headers={"Content-Type":"application/json",...e.headers},e.body=JSON.stringify(s)),r.request(n,e)}static async request(n,s={}){try{const e=await fetch(n,s);if(!e.ok)return{code:e.status,msg:e.statusText,data:null};const a=e.headers.get("content-type");if(a&&a.includes("application/json")){const t=await e.json();return typeof t=="object"&&"code"in t&&"msg"in t&&"data"in t?t:{code:200,msg:"success",data:t}}else return a&&a.includes("text/html")?{code:200,msg:"success",data:await e.text()}:{code:200,msg:"success",data:await e.blob()}}catch(e){return{code:500,msg:e.msg,data:null}}}static async doRequest(n,s,e,a){const t={method:s.toUpperCase(),headers:e};if(a)if(s.toUpperCase()==="GET"){const c=new URLSearchParams(a).toString();n=`${n}?${c}`}else t.headers={"Content-Type":"application/json",...t.headers},t.body=JSON.stringify(a);return r.request(n,t)}}export{r as F};
